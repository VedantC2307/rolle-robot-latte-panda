"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),Pose2DStampedWrapper=require("../../generated/nav_2d_msgs/nav_2d_msgs__msg__Pose2DStamped.js"),Twist2DWrapper=require("../../generated/nav_2d_msgs/nav_2d_msgs__msg__Twist2D.js"),Path2DWrapper=require("../../generated/nav_2d_msgs/nav_2d_msgs__msg__Path2D.js"),Trajectory2DWrapper=require("../../generated/dwb_msgs/dwb_msgs__msg__Trajectory2D.js"),ScoreTrajectory_RequestRefStruct=StructType({pose:Pose2DStampedWrapper.refObjectType,velocity:Twist2DWrapper.refObjectType,global_plan:Path2DWrapper.refObjectType,traj:Trajectory2DWrapper.refObjectType}),ScoreTrajectory_RequestRefArray=ArrayType(ScoreTrajectory_RequestRefStruct),ScoreTrajectory_RequestRefStructArray=StructType({data:ScoreTrajectory_RequestRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class ScoreTrajectory_RequestWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new ScoreTrajectory_RequestRefStruct(e._refObject.toObject()),this._wrapperFields.pose=new Pose2DStampedWrapper(e._wrapperFields.pose),this._wrapperFields.velocity=new Twist2DWrapper(e._wrapperFields.velocity),this._wrapperFields.global_plan=new Path2DWrapper(e._wrapperFields.global_plan),this._wrapperFields.traj=new Trajectory2DWrapper(e._wrapperFields.traj)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new ScoreTrajectory_RequestRefStruct,this._wrapperFields.pose=new Pose2DStampedWrapper,this._wrapperFields.velocity=new Twist2DWrapper,this._wrapperFields.global_plan=new Path2DWrapper,this._wrapperFields.traj=new Trajectory2DWrapper}static createFromRefObject(e){let r=new ScoreTrajectory_RequestWrapper;return r.copyRefObject(e),r}static createArray(){return new ScoreTrajectory_RequestArrayWrapper}static get ArrayType(){return ScoreTrajectory_RequestArrayWrapper}static get refObjectArrayType(){return ScoreTrajectory_RequestRefStructArray}static get refObjectType(){return ScoreTrajectory_RequestRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.pose.freeze(e),this._refObject.pose=this._wrapperFields.pose.refObject,this._wrapperFields.velocity.freeze(e),this._refObject.velocity=this._wrapperFields.velocity.refObject,this._wrapperFields.global_plan.freeze(e),this._refObject.global_plan=this._wrapperFields.global_plan.refObject,this._wrapperFields.traj.freeze(e),this._refObject.traj=this._wrapperFields.traj.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.pose.copyRefObject(e.pose),this._wrapperFields.velocity.copyRefObject(e.velocity),this._wrapperFields.global_plan.copyRefObject(e.global_plan),this._wrapperFields.traj.copyRefObject(e.traj)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){Pose2DStampedWrapper.freeStruct(e.pose),Twist2DWrapper.freeStruct(e.velocity),Path2DWrapper.freeStruct(e.global_plan),Trajectory2DWrapper.freeStruct(e.traj)}static destoryRawROS(e){ScoreTrajectory_RequestWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"dwb_msgs",subFolder:"srv",interfaceName:"ScoreTrajectory_Request"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get pose(){return this._wrapperFields.pose}set pose(e){e instanceof Pose2DStampedWrapper?this._wrapperFields.pose.copy(e):this._wrapperFields.pose.copy(new Pose2DStampedWrapper(e))}get velocity(){return this._wrapperFields.velocity}set velocity(e){e instanceof Twist2DWrapper?this._wrapperFields.velocity.copy(e):this._wrapperFields.velocity.copy(new Twist2DWrapper(e))}get global_plan(){return this._wrapperFields.global_plan}set global_plan(e){e instanceof Path2DWrapper?this._wrapperFields.global_plan.copy(e):this._wrapperFields.global_plan.copy(new Path2DWrapper(e))}get traj(){return this._wrapperFields.traj}set traj(e){e instanceof Trajectory2DWrapper?this._wrapperFields.traj.copy(e):this._wrapperFields.traj.copy(new Trajectory2DWrapper(e))}copyRefObject(e){this._refObject=new ScoreTrajectory_RequestRefStruct(e.toObject()),this._wrapperFields.pose.copyRefObject(this._refObject.pose),this._wrapperFields.velocity.copyRefObject(this._refObject.velocity),this._wrapperFields.global_plan.copyRefObject(this._refObject.global_plan),this._wrapperFields.traj.copyRefObject(this._refObject.traj)}copy(e){this._refObject=new ScoreTrajectory_RequestRefStruct(e._refObject.toObject()),this._wrapperFields.pose.copy(e._wrapperFields.pose),this._wrapperFields.velocity.copy(e._wrapperFields.velocity),this._wrapperFields.global_plan.copy(e._wrapperFields.global_plan),this._wrapperFields.traj.copy(e._wrapperFields.traj)}static get classType(){return ScoreTrajectory_RequestWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"pose",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"nav_2d_msgs",type:"Pose2DStamped",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"velocity",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"nav_2d_msgs",type:"Twist2D",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"global_plan",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"nav_2d_msgs",type:"Path2D",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"traj",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"dwb_msgs",type:"Trajectory2D",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"dwb_msgs",type:"ScoreTrajectory_Request",stringUpperBound:null,isPrimitiveType:!1},msgName:"ScoreTrajectory_Request"}}hasMember(e){return-1!==["pose","velocity","global_plan","traj"].indexOf(e)}}class ScoreTrajectory_RequestArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof ScoreTrajectory_RequestWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new ScoreTrajectory_RequestWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to ScoreTrajectory_RequestArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to ScoreTrajectory_RequestArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new ScoreTrajectory_RequestRefArray(e),this._refObject=new ScoreTrajectory_RequestRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new ScoreTrajectory_RequestWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof ScoreTrajectory_RequestArrayWrapper))throw new TypeError('Invalid argument: should provide "ScoreTrajectory_RequestArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)ScoreTrajectory_RequestWrapper.freeStruct(r[t])}static get elementType(){return ScoreTrajectory_RequestWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return ScoreTrajectory_RequestArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=ScoreTrajectory_RequestWrapper;