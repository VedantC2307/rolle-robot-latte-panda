"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),Trajectory2DWrapper=require("../../generated/dwb_msgs/dwb_msgs__msg__Trajectory2D.js"),CriticScoreWrapper=require("../../generated/dwb_msgs/dwb_msgs__msg__CriticScore.js"),TrajectoryScoreRefStruct=StructType({traj:Trajectory2DWrapper.refObjectType,scores:CriticScoreWrapper.refObjectArrayType,total:primitiveTypes.float32}),TrajectoryScoreRefArray=ArrayType(TrajectoryScoreRefStruct),TrajectoryScoreRefStructArray=StructType({data:TrajectoryScoreRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class TrajectoryScoreWrapper{constructor(r){this._initialize(),this._setDefaults(),"object"==typeof r&&r._refObject?(this._refObject=new TrajectoryScoreRefStruct(r._refObject.toObject()),this._wrapperFields.traj=new Trajectory2DWrapper(r._wrapperFields.traj),this._wrapperFields.scores=CriticScoreWrapper.createArray(),this._wrapperFields.scores.copy(r._wrapperFields.scores)):void 0!==r&&translator.constructFromPlanObject(this,r),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new TrajectoryScoreRefStruct,this._wrapperFields.traj=new Trajectory2DWrapper,this._wrapperFields.scores=CriticScoreWrapper.createArray()}static createFromRefObject(r){let e=new TrajectoryScoreWrapper;return e.copyRefObject(r),e}static createArray(){return new TrajectoryScoreArrayWrapper}static get ArrayType(){return TrajectoryScoreArrayWrapper}static get refObjectArrayType(){return TrajectoryScoreRefStructArray}static get refObjectType(){return TrajectoryScoreRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(r){this._wrapperFields.traj.freeze(r),this._refObject.traj=this._wrapperFields.traj.refObject,r&&this._wrapperFields.scores.fill([]),this._wrapperFields.scores.freeze(r),this._refObject.scores=this._wrapperFields.scores.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(r){this._wrapperFields.traj.copyRefObject(r.traj),this._wrapperFields.scores.copyRefObject(r.scores),this._refObject.total=r.total}toPlainObject(r){return translator.toPlainObject(this,r)}static freeStruct(r){Trajectory2DWrapper.freeStruct(r.traj),0!=r.scores.size&&(CriticScoreWrapper.ArrayType.freeArray(r.scores),CriticScoreWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(r.scores,CriticScoreWrapper.refObjectArrayType,"data"))}static destoryRawROS(r){TrajectoryScoreWrapper.freeStruct(r.refObject)}static type(){return{pkgName:"dwb_msgs",subFolder:"msg",interfaceName:"TrajectoryScore"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get traj(){return this._wrapperFields.traj}set traj(r){r instanceof Trajectory2DWrapper?this._wrapperFields.traj.copy(r):this._wrapperFields.traj.copy(new Trajectory2DWrapper(r))}get scores(){return this._wrapperFields.scores}set scores(r){this._wrapperFields.scores.fill(r)}get total(){return this._refObject.total}set total(r){this._refObject.total=r}copyRefObject(r){this._refObject=new TrajectoryScoreRefStruct(r.toObject()),this._wrapperFields.traj.copyRefObject(this._refObject.traj),this._wrapperFields.scores.copyRefObject(this._refObject.scores)}copy(r){this._refObject=new TrajectoryScoreRefStruct(r._refObject.toObject()),this._wrapperFields.traj.copy(r._wrapperFields.traj),this._wrapperFields.scores.copy(r._wrapperFields.scores)}static get classType(){return TrajectoryScoreWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"traj",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"dwb_msgs",type:"Trajectory2D",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"scores",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"dwb_msgs",type:"CriticScore",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"total",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"dwb_msgs",type:"TrajectoryScore",stringUpperBound:null,isPrimitiveType:!1},msgName:"TrajectoryScore"}}hasMember(r){return-1!==["traj","scores","total"].indexOf(r)}}class TrajectoryScoreArrayWrapper{constructor(r=0){this._resize(r)}toRawROS(){return this._refObject.ref()}fill(r){const e=r.length;this._resize(e),r.forEach(((r,e)=>{r instanceof TrajectoryScoreWrapper?this._wrappers[e].copy(r):this._wrappers[e]=new TrajectoryScoreWrapper(r)}))}freeze(r){this._wrappers.forEach(((e,t)=>{e.freeze(r),this._refArray[t]=e.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(r){if("number"!=typeof r)throw new TypeError("Invalid argument: should provide a number to TrajectoryScoreArrayWrapper.size setter");return this._resize(r)}get capacity(){return this._wrappers.length}set capacity(r){if("number"!=typeof r)throw new TypeError("Invalid argument: should provide a number to TrajectoryScoreArrayWrapper.capacity setter");return this._resize(r)}get refObject(){return this._refObject}_resize(r){if(r<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new TrajectoryScoreRefArray(r),this._refObject=new TrajectoryScoreRefStructArray,this._refObject.size=r,this._refObject.capacity=r,this._wrappers=new Array;for(let e=0;e<r;e++)this._wrappers.push(new TrajectoryScoreWrapper)}copyRefObject(r){this._refObject=r;let e=this._refObject.data;e.length=this._refObject.size,this._resize(this._refObject.size);for(let r=0;r<this._refObject.size;r++)this._wrappers[r].copyRefObject(e[r])}copy(r){if(!(r instanceof TrajectoryScoreArrayWrapper))throw new TypeError('Invalid argument: should provide "TrajectoryScoreArrayWrapper".');this._resize(r.size),r._wrappers.forEach(((r,e)=>{this._wrappers[e].copy(r)}))}static freeArray(r){let e=r.data;e.length=r.size;for(let t=0;t<r.size;t++)TrajectoryScoreWrapper.freeStruct(e[t])}static get elementType(){return TrajectoryScoreWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return TrajectoryScoreArrayWrapper}toPlainObject(r){return translator.toPlainObject(this,r)}}module.exports=TrajectoryScoreWrapper;