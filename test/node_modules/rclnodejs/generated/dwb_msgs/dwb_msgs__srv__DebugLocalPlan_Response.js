"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),LocalPlanEvaluationWrapper=require("../../generated/dwb_msgs/dwb_msgs__msg__LocalPlanEvaluation.js"),DebugLocalPlan_ResponseRefStruct=StructType({results:LocalPlanEvaluationWrapper.refObjectType}),DebugLocalPlan_ResponseRefArray=ArrayType(DebugLocalPlan_ResponseRefStruct),DebugLocalPlan_ResponseRefStructArray=StructType({data:DebugLocalPlan_ResponseRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class DebugLocalPlan_ResponseWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new DebugLocalPlan_ResponseRefStruct(e._refObject.toObject()),this._wrapperFields.results=new LocalPlanEvaluationWrapper(e._wrapperFields.results)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new DebugLocalPlan_ResponseRefStruct,this._wrapperFields.results=new LocalPlanEvaluationWrapper}static createFromRefObject(e){let r=new DebugLocalPlan_ResponseWrapper;return r.copyRefObject(e),r}static createArray(){return new DebugLocalPlan_ResponseArrayWrapper}static get ArrayType(){return DebugLocalPlan_ResponseArrayWrapper}static get refObjectArrayType(){return DebugLocalPlan_ResponseRefStructArray}static get refObjectType(){return DebugLocalPlan_ResponseRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.results.freeze(e),this._refObject.results=this._wrapperFields.results.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.results.copyRefObject(e.results)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){LocalPlanEvaluationWrapper.freeStruct(e.results)}static destoryRawROS(e){DebugLocalPlan_ResponseWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"dwb_msgs",subFolder:"srv",interfaceName:"DebugLocalPlan_Response"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get results(){return this._wrapperFields.results}set results(e){e instanceof LocalPlanEvaluationWrapper?this._wrapperFields.results.copy(e):this._wrapperFields.results.copy(new LocalPlanEvaluationWrapper(e))}copyRefObject(e){this._refObject=new DebugLocalPlan_ResponseRefStruct(e.toObject()),this._wrapperFields.results.copyRefObject(this._refObject.results)}copy(e){this._refObject=new DebugLocalPlan_ResponseRefStruct(e._refObject.toObject()),this._wrapperFields.results.copy(e._wrapperFields.results)}static get classType(){return DebugLocalPlan_ResponseWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"results",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"dwb_msgs",type:"LocalPlanEvaluation",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"dwb_msgs",type:"DebugLocalPlan_Response",stringUpperBound:null,isPrimitiveType:!1},msgName:"DebugLocalPlan_Response"}}hasMember(e){return-1!==["results"].indexOf(e)}}class DebugLocalPlan_ResponseArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof DebugLocalPlan_ResponseWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new DebugLocalPlan_ResponseWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to DebugLocalPlan_ResponseArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to DebugLocalPlan_ResponseArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new DebugLocalPlan_ResponseRefArray(e),this._refObject=new DebugLocalPlan_ResponseRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new DebugLocalPlan_ResponseWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof DebugLocalPlan_ResponseArrayWrapper))throw new TypeError('Invalid argument: should provide "DebugLocalPlan_ResponseArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)DebugLocalPlan_ResponseWrapper.freeStruct(r[t])}static get elementType(){return DebugLocalPlan_ResponseWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return DebugLocalPlan_ResponseArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=DebugLocalPlan_ResponseWrapper;