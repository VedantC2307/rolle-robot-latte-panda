"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),HeaderWrapper=require("../../generated/std_msgs/std_msgs__msg__Header.js"),TrajectoryScoreWrapper=require("../../generated/dwb_msgs/dwb_msgs__msg__TrajectoryScore.js"),LocalPlanEvaluationRefStruct=StructType({header:HeaderWrapper.refObjectType,twists:TrajectoryScoreWrapper.refObjectArrayType,best_index:primitiveTypes.uint16,worst_index:primitiveTypes.uint16}),LocalPlanEvaluationRefArray=ArrayType(LocalPlanEvaluationRefStruct),LocalPlanEvaluationRefStructArray=StructType({data:LocalPlanEvaluationRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class LocalPlanEvaluationWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new LocalPlanEvaluationRefStruct(e._refObject.toObject()),this._wrapperFields.header=new HeaderWrapper(e._wrapperFields.header),this._wrapperFields.twists=TrajectoryScoreWrapper.createArray(),this._wrapperFields.twists.copy(e._wrapperFields.twists)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new LocalPlanEvaluationRefStruct,this._wrapperFields.header=new HeaderWrapper,this._wrapperFields.twists=TrajectoryScoreWrapper.createArray()}static createFromRefObject(e){let r=new LocalPlanEvaluationWrapper;return r.copyRefObject(e),r}static createArray(){return new LocalPlanEvaluationArrayWrapper}static get ArrayType(){return LocalPlanEvaluationArrayWrapper}static get refObjectArrayType(){return LocalPlanEvaluationRefStructArray}static get refObjectType(){return LocalPlanEvaluationRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.header.freeze(e),this._refObject.header=this._wrapperFields.header.refObject,e&&this._wrapperFields.twists.fill([]),this._wrapperFields.twists.freeze(e),this._refObject.twists=this._wrapperFields.twists.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.header.copyRefObject(e.header),this._wrapperFields.twists.copyRefObject(e.twists),this._refObject.best_index=e.best_index,this._refObject.worst_index=e.worst_index}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){HeaderWrapper.freeStruct(e.header),0!=e.twists.size&&(TrajectoryScoreWrapper.ArrayType.freeArray(e.twists),TrajectoryScoreWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.twists,TrajectoryScoreWrapper.refObjectArrayType,"data"))}static destoryRawROS(e){LocalPlanEvaluationWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"dwb_msgs",subFolder:"msg",interfaceName:"LocalPlanEvaluation"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get header(){return this._wrapperFields.header}set header(e){e instanceof HeaderWrapper?this._wrapperFields.header.copy(e):this._wrapperFields.header.copy(new HeaderWrapper(e))}get twists(){return this._wrapperFields.twists}set twists(e){this._wrapperFields.twists.fill(e)}get best_index(){return this._refObject.best_index}set best_index(e){this._refObject.best_index=e}get worst_index(){return this._refObject.worst_index}set worst_index(e){this._refObject.worst_index=e}copyRefObject(e){this._refObject=new LocalPlanEvaluationRefStruct(e.toObject()),this._wrapperFields.header.copyRefObject(this._refObject.header),this._wrapperFields.twists.copyRefObject(this._refObject.twists)}copy(e){this._refObject=new LocalPlanEvaluationRefStruct(e._refObject.toObject()),this._wrapperFields.header.copy(e._wrapperFields.header),this._wrapperFields.twists.copy(e._wrapperFields.twists)}static get classType(){return LocalPlanEvaluationWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"header",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"std_msgs",type:"Header",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"twists",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"dwb_msgs",type:"TrajectoryScore",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"best_index",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"uint16",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"worst_index",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"uint16",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"dwb_msgs",type:"LocalPlanEvaluation",stringUpperBound:null,isPrimitiveType:!1},msgName:"LocalPlanEvaluation"}}hasMember(e){return-1!==["header","twists","best_index","worst_index"].indexOf(e)}}class LocalPlanEvaluationArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof LocalPlanEvaluationWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new LocalPlanEvaluationWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to LocalPlanEvaluationArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to LocalPlanEvaluationArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new LocalPlanEvaluationRefArray(e),this._refObject=new LocalPlanEvaluationRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new LocalPlanEvaluationWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof LocalPlanEvaluationArrayWrapper))throw new TypeError('Invalid argument: should provide "LocalPlanEvaluationArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)LocalPlanEvaluationWrapper.freeStruct(r[t])}static get elementType(){return LocalPlanEvaluationWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return LocalPlanEvaluationArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=LocalPlanEvaluationWrapper;