"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),TimeWrapper=require("../../generated/builtin_interfaces/builtin_interfaces__msg__Time.js"),QueryTrajectoryState_RequestRefStruct=StructType({time:TimeWrapper.refObjectType}),QueryTrajectoryState_RequestRefArray=ArrayType(QueryTrajectoryState_RequestRefStruct),QueryTrajectoryState_RequestRefStructArray=StructType({data:QueryTrajectoryState_RequestRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class QueryTrajectoryState_RequestWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new QueryTrajectoryState_RequestRefStruct(e._refObject.toObject()),this._wrapperFields.time=new TimeWrapper(e._wrapperFields.time)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new QueryTrajectoryState_RequestRefStruct,this._wrapperFields.time=new TimeWrapper}static createFromRefObject(e){let r=new QueryTrajectoryState_RequestWrapper;return r.copyRefObject(e),r}static createArray(){return new QueryTrajectoryState_RequestArrayWrapper}static get ArrayType(){return QueryTrajectoryState_RequestArrayWrapper}static get refObjectArrayType(){return QueryTrajectoryState_RequestRefStructArray}static get refObjectType(){return QueryTrajectoryState_RequestRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.time.freeze(e),this._refObject.time=this._wrapperFields.time.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.time.copyRefObject(e.time)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){TimeWrapper.freeStruct(e.time)}static destoryRawROS(e){QueryTrajectoryState_RequestWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"control_msgs",subFolder:"srv",interfaceName:"QueryTrajectoryState_Request"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get time(){return this._wrapperFields.time}set time(e){e instanceof TimeWrapper?this._wrapperFields.time.copy(e):this._wrapperFields.time.copy(new TimeWrapper(e))}copyRefObject(e){this._refObject=new QueryTrajectoryState_RequestRefStruct(e.toObject()),this._wrapperFields.time.copyRefObject(this._refObject.time)}copy(e){this._refObject=new QueryTrajectoryState_RequestRefStruct(e._refObject.toObject()),this._wrapperFields.time.copy(e._wrapperFields.time)}static get classType(){return QueryTrajectoryState_RequestWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"time",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"builtin_interfaces",type:"Time",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"control_msgs",type:"QueryTrajectoryState_Request",stringUpperBound:null,isPrimitiveType:!1},msgName:"QueryTrajectoryState_Request"}}hasMember(e){return-1!==["time"].indexOf(e)}}class QueryTrajectoryState_RequestArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof QueryTrajectoryState_RequestWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new QueryTrajectoryState_RequestWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to QueryTrajectoryState_RequestArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to QueryTrajectoryState_RequestArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new QueryTrajectoryState_RequestRefArray(e),this._refObject=new QueryTrajectoryState_RequestRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new QueryTrajectoryState_RequestWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof QueryTrajectoryState_RequestArrayWrapper))throw new TypeError('Invalid argument: should provide "QueryTrajectoryState_RequestArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)QueryTrajectoryState_RequestWrapper.freeStruct(r[t])}static get elementType(){return QueryTrajectoryState_RequestWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return QueryTrajectoryState_RequestArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=QueryTrajectoryState_RequestWrapper;