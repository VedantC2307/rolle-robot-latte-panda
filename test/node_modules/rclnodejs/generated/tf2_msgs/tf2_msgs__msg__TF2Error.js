"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),TF2ErrorRefStruct=StructType({error:primitiveTypes.uint8,error_string:primitiveTypes.string}),TF2ErrorRefArray=ArrayType(TF2ErrorRefStruct),TF2ErrorRefStructArray=StructType({data:TF2ErrorRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class TF2ErrorWrapper{constructor(r){this._initialize(),this._setDefaults(),"object"==typeof r&&r._refObject?(this._refObject=new TF2ErrorRefStruct(r._refObject.toObject()),this._wrapperFields.error_string=new StringWrapper(r._wrapperFields.error_string)):void 0!==r&&translator.constructFromPlanObject(this,r),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new TF2ErrorRefStruct,this._wrapperFields.error_string=new StringWrapper}static createFromRefObject(r){let e=new TF2ErrorWrapper;return e.copyRefObject(r),e}static createArray(){return new TF2ErrorArrayWrapper}static get ArrayType(){return TF2ErrorArrayWrapper}static get refObjectArrayType(){return TF2ErrorRefStructArray}static get refObjectType(){return TF2ErrorRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(r){r&&this._wrapperFields.error_string.freeze(r),this._refObject.error_string=this._wrapperFields.error_string.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(r){this._refObject.error=r.error,this._wrapperFields.error_string.data=r.error_string.data}toPlainObject(r){return translator.toPlainObject(this,r)}static freeStruct(r){StringWrapper.freeStruct(r.error_string)}static destoryRawROS(r){TF2ErrorWrapper.freeStruct(r.refObject)}static type(){return{pkgName:"tf2_msgs",subFolder:"msg",interfaceName:"TF2Error"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get error(){return this._refObject.error}set error(r){this._refObject.error=r}get error_string(){return this._wrapperFields.error_string.data}set error_string(r){this._wrapperFields.error_string.data=r}copyRefObject(r){this._refObject=new TF2ErrorRefStruct(r.toObject()),this._wrapperFields.error_string.copyRefObject(this._refObject.error_string)}copy(r){this._refObject=new TF2ErrorRefStruct(r._refObject.toObject()),this._wrapperFields.error_string.copy(r._wrapperFields.error_string)}static get classType(){return TF2ErrorWrapper}static get ROSMessageDef(){return{constants:[{type:"uint8",name:"NO_ERROR",value:0},{type:"uint8",name:"LOOKUP_ERROR",value:1},{type:"uint8",name:"CONNECTIVITY_ERROR",value:2},{type:"uint8",name:"EXTRAPOLATION_ERROR",value:3},{type:"uint8",name:"INVALID_ARGUMENT_ERROR",value:4},{type:"uint8",name:"TIMEOUT_ERROR",value:5},{type:"uint8",name:"TRANSFORM_ERROR",value:6}],fields:[{name:"error",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"uint8",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"error_string",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"tf2_msgs",type:"TF2Error",stringUpperBound:null,isPrimitiveType:!1},msgName:"TF2Error"}}hasMember(r){return-1!==["error","error_string"].indexOf(r)}}class TF2ErrorArrayWrapper{constructor(r=0){this._resize(r)}toRawROS(){return this._refObject.ref()}fill(r){const e=r.length;this._resize(e),r.forEach(((r,e)=>{r instanceof TF2ErrorWrapper?this._wrappers[e].copy(r):this._wrappers[e]=new TF2ErrorWrapper(r)}))}freeze(r){this._wrappers.forEach(((e,t)=>{e.freeze(r),this._refArray[t]=e.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(r){if("number"!=typeof r)throw new TypeError("Invalid argument: should provide a number to TF2ErrorArrayWrapper.size setter");return this._resize(r)}get capacity(){return this._wrappers.length}set capacity(r){if("number"!=typeof r)throw new TypeError("Invalid argument: should provide a number to TF2ErrorArrayWrapper.capacity setter");return this._resize(r)}get refObject(){return this._refObject}_resize(r){if(r<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new TF2ErrorRefArray(r),this._refObject=new TF2ErrorRefStructArray,this._refObject.size=r,this._refObject.capacity=r,this._wrappers=new Array;for(let e=0;e<r;e++)this._wrappers.push(new TF2ErrorWrapper)}copyRefObject(r){this._refObject=r;let e=this._refObject.data;e.length=this._refObject.size,this._resize(this._refObject.size);for(let r=0;r<this._refObject.size;r++)this._wrappers[r].copyRefObject(e[r])}copy(r){if(!(r instanceof TF2ErrorArrayWrapper))throw new TypeError('Invalid argument: should provide "TF2ErrorArrayWrapper".');this._resize(r.size),r._wrappers.forEach(((r,e)=>{this._wrappers[e].copy(r)}))}static freeArray(r){let e=r.data;e.length=r.size;for(let t=0;t<r.size;t++)TF2ErrorWrapper.freeStruct(e[t])}static get elementType(){return TF2ErrorWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return TF2ErrorArrayWrapper}toPlainObject(r){return translator.toPlainObject(this,r)}}Object.defineProperty(TF2ErrorWrapper,"NO_ERROR",{value:0,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(TF2ErrorWrapper,"LOOKUP_ERROR",{value:1,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(TF2ErrorWrapper,"CONNECTIVITY_ERROR",{value:2,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(TF2ErrorWrapper,"EXTRAPOLATION_ERROR",{value:3,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(TF2ErrorWrapper,"INVALID_ARGUMENT_ERROR",{value:4,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(TF2ErrorWrapper,"TIMEOUT_ERROR",{value:5,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(TF2ErrorWrapper,"TRANSFORM_ERROR",{value:6,writable:!1,enumerable:!0,configurable:!0}),module.exports=TF2ErrorWrapper;