"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),UUIDWrapper=require("../../generated/unique_identifier_msgs/unique_identifier_msgs__msg__UUID.js"),Fibonacci_GoalWrapper=require("../../generated/action_tutorials_interfaces/action_tutorials_interfaces__action__Fibonacci_Goal.js"),Fibonacci_SendGoal_RequestRefStruct=StructType({goal_id:UUIDWrapper.refObjectType,goal:Fibonacci_GoalWrapper.refObjectType}),Fibonacci_SendGoal_RequestRefArray=ArrayType(Fibonacci_SendGoal_RequestRefStruct),Fibonacci_SendGoal_RequestRefStructArray=StructType({data:Fibonacci_SendGoal_RequestRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class Fibonacci_SendGoal_RequestWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new Fibonacci_SendGoal_RequestRefStruct(e._refObject.toObject()),this._wrapperFields.goal_id=new UUIDWrapper(e._wrapperFields.goal_id),this._wrapperFields.goal=new Fibonacci_GoalWrapper(e._wrapperFields.goal)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new Fibonacci_SendGoal_RequestRefStruct,this._wrapperFields.goal_id=new UUIDWrapper,this._wrapperFields.goal=new Fibonacci_GoalWrapper}static createFromRefObject(e){let r=new Fibonacci_SendGoal_RequestWrapper;return r.copyRefObject(e),r}static createArray(){return new Fibonacci_SendGoal_RequestArrayWrapper}static get ArrayType(){return Fibonacci_SendGoal_RequestArrayWrapper}static get refObjectArrayType(){return Fibonacci_SendGoal_RequestRefStructArray}static get refObjectType(){return Fibonacci_SendGoal_RequestRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.goal_id.freeze(e),this._refObject.goal_id=this._wrapperFields.goal_id.refObject,this._wrapperFields.goal.freeze(e),this._refObject.goal=this._wrapperFields.goal.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.goal_id.copyRefObject(e.goal_id),this._wrapperFields.goal.copyRefObject(e.goal)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){UUIDWrapper.freeStruct(e.goal_id),Fibonacci_GoalWrapper.freeStruct(e.goal)}static destoryRawROS(e){Fibonacci_SendGoal_RequestWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"action_tutorials_interfaces",subFolder:"action",interfaceName:"Fibonacci_SendGoal_Request"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get goal_id(){return this._wrapperFields.goal_id}set goal_id(e){e instanceof UUIDWrapper?this._wrapperFields.goal_id.copy(e):this._wrapperFields.goal_id.copy(new UUIDWrapper(e))}get goal(){return this._wrapperFields.goal}set goal(e){e instanceof Fibonacci_GoalWrapper?this._wrapperFields.goal.copy(e):this._wrapperFields.goal.copy(new Fibonacci_GoalWrapper(e))}copyRefObject(e){this._refObject=new Fibonacci_SendGoal_RequestRefStruct(e.toObject()),this._wrapperFields.goal_id.copyRefObject(this._refObject.goal_id),this._wrapperFields.goal.copyRefObject(this._refObject.goal)}copy(e){this._refObject=new Fibonacci_SendGoal_RequestRefStruct(e._refObject.toObject()),this._wrapperFields.goal_id.copy(e._wrapperFields.goal_id),this._wrapperFields.goal.copy(e._wrapperFields.goal)}static get classType(){return Fibonacci_SendGoal_RequestWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"goal_id",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:null,pkgName:"unique_identifier_msgs",type:"UUID",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"goal",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:null,pkgName:"action_tutorials_interfaces",type:"Fibonacci_Goal",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"action_tutorials_interfaces",type:"Fibonacci_SendGoal_Request",stringUpperBound:null,isPrimitiveType:!1},msgName:"Fibonacci_SendGoal_Request"}}hasMember(e){return-1!==["goal_id","goal"].indexOf(e)}}class Fibonacci_SendGoal_RequestArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof Fibonacci_SendGoal_RequestWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new Fibonacci_SendGoal_RequestWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to Fibonacci_SendGoal_RequestArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to Fibonacci_SendGoal_RequestArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new Fibonacci_SendGoal_RequestRefArray(e),this._refObject=new Fibonacci_SendGoal_RequestRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new Fibonacci_SendGoal_RequestWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof Fibonacci_SendGoal_RequestArrayWrapper))throw new TypeError('Invalid argument: should provide "Fibonacci_SendGoal_RequestArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)Fibonacci_SendGoal_RequestWrapper.freeStruct(r[t])}static get elementType(){return Fibonacci_SendGoal_RequestWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return Fibonacci_SendGoal_RequestArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=Fibonacci_SendGoal_RequestWrapper;