"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),OccupancyGridWrapper=require("../../generated/nav_msgs/nav_msgs__msg__OccupancyGrid.js"),GetMapROI_ResponseRefStruct=StructType({sub_map:OccupancyGridWrapper.refObjectType}),GetMapROI_ResponseRefArray=ArrayType(GetMapROI_ResponseRefStruct),GetMapROI_ResponseRefStructArray=StructType({data:GetMapROI_ResponseRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class GetMapROI_ResponseWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new GetMapROI_ResponseRefStruct(e._refObject.toObject()),this._wrapperFields.sub_map=new OccupancyGridWrapper(e._wrapperFields.sub_map)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new GetMapROI_ResponseRefStruct,this._wrapperFields.sub_map=new OccupancyGridWrapper}static createFromRefObject(e){let r=new GetMapROI_ResponseWrapper;return r.copyRefObject(e),r}static createArray(){return new GetMapROI_ResponseArrayWrapper}static get ArrayType(){return GetMapROI_ResponseArrayWrapper}static get refObjectArrayType(){return GetMapROI_ResponseRefStructArray}static get refObjectType(){return GetMapROI_ResponseRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.sub_map.freeze(e),this._refObject.sub_map=this._wrapperFields.sub_map.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.sub_map.copyRefObject(e.sub_map)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){OccupancyGridWrapper.freeStruct(e.sub_map)}static destoryRawROS(e){GetMapROI_ResponseWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"map_msgs",subFolder:"srv",interfaceName:"GetMapROI_Response"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get sub_map(){return this._wrapperFields.sub_map}set sub_map(e){e instanceof OccupancyGridWrapper?this._wrapperFields.sub_map.copy(e):this._wrapperFields.sub_map.copy(new OccupancyGridWrapper(e))}copyRefObject(e){this._refObject=new GetMapROI_ResponseRefStruct(e.toObject()),this._wrapperFields.sub_map.copyRefObject(this._refObject.sub_map)}copy(e){this._refObject=new GetMapROI_ResponseRefStruct(e._refObject.toObject()),this._wrapperFields.sub_map.copy(e._wrapperFields.sub_map)}static get classType(){return GetMapROI_ResponseWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"sub_map",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"nav_msgs",type:"OccupancyGrid",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"map_msgs",type:"GetMapROI_Response",stringUpperBound:null,isPrimitiveType:!1},msgName:"GetMapROI_Response"}}hasMember(e){return-1!==["sub_map"].indexOf(e)}}class GetMapROI_ResponseArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof GetMapROI_ResponseWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new GetMapROI_ResponseWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to GetMapROI_ResponseArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to GetMapROI_ResponseArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new GetMapROI_ResponseRefArray(e),this._refObject=new GetMapROI_ResponseRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new GetMapROI_ResponseWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof GetMapROI_ResponseArrayWrapper))throw new TypeError('Invalid argument: should provide "GetMapROI_ResponseArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)GetMapROI_ResponseWrapper.freeStruct(r[t])}static get elementType(){return GetMapROI_ResponseWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return GetMapROI_ResponseArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=GetMapROI_ResponseWrapper;