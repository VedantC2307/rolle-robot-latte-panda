"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),SetPhysicsProperties_ResponseRefStruct=StructType({success:primitiveTypes.bool,status_message:primitiveTypes.string}),SetPhysicsProperties_ResponseRefArray=ArrayType(SetPhysicsProperties_ResponseRefStruct),SetPhysicsProperties_ResponseRefStructArray=StructType({data:SetPhysicsProperties_ResponseRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class SetPhysicsProperties_ResponseWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new SetPhysicsProperties_ResponseRefStruct(e._refObject.toObject()),this._wrapperFields.status_message=new StringWrapper(e._wrapperFields.status_message)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new SetPhysicsProperties_ResponseRefStruct,this._wrapperFields.status_message=new StringWrapper}static createFromRefObject(e){let s=new SetPhysicsProperties_ResponseWrapper;return s.copyRefObject(e),s}static createArray(){return new SetPhysicsProperties_ResponseArrayWrapper}static get ArrayType(){return SetPhysicsProperties_ResponseArrayWrapper}static get refObjectArrayType(){return SetPhysicsProperties_ResponseRefStructArray}static get refObjectType(){return SetPhysicsProperties_ResponseRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e&&this._wrapperFields.status_message.freeze(e),this._refObject.status_message=this._wrapperFields.status_message.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._refObject.success=e.success,this._wrapperFields.status_message.data=e.status_message.data}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){StringWrapper.freeStruct(e.status_message)}static destoryRawROS(e){SetPhysicsProperties_ResponseWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"gazebo_msgs",subFolder:"srv",interfaceName:"SetPhysicsProperties_Response"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get success(){return this._refObject.success}set success(e){this._refObject.success=e}get status_message(){return this._wrapperFields.status_message.data}set status_message(e){this._wrapperFields.status_message.data=e}copyRefObject(e){this._refObject=new SetPhysicsProperties_ResponseRefStruct(e.toObject()),this._wrapperFields.status_message.copyRefObject(this._refObject.status_message)}copy(e){this._refObject=new SetPhysicsProperties_ResponseRefStruct(e._refObject.toObject()),this._wrapperFields.status_message.copy(e._wrapperFields.status_message)}static get classType(){return SetPhysicsProperties_ResponseWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"success",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"bool",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"status_message",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"gazebo_msgs",type:"SetPhysicsProperties_Response",stringUpperBound:null,isPrimitiveType:!1},msgName:"SetPhysicsProperties_Response"}}hasMember(e){return-1!==["success","status_message"].indexOf(e)}}class SetPhysicsProperties_ResponseArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const s=e.length;this._resize(s),e.forEach(((e,s)=>{e instanceof SetPhysicsProperties_ResponseWrapper?this._wrappers[s].copy(e):this._wrappers[s]=new SetPhysicsProperties_ResponseWrapper(e)}))}freeze(e){this._wrappers.forEach(((s,r)=>{s.freeze(e),this._refArray[r]=s.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to SetPhysicsProperties_ResponseArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to SetPhysicsProperties_ResponseArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new SetPhysicsProperties_ResponseRefArray(e),this._refObject=new SetPhysicsProperties_ResponseRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let s=0;s<e;s++)this._wrappers.push(new SetPhysicsProperties_ResponseWrapper)}copyRefObject(e){this._refObject=e;let s=this._refObject.data;s.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(s[e])}copy(e){if(!(e instanceof SetPhysicsProperties_ResponseArrayWrapper))throw new TypeError('Invalid argument: should provide "SetPhysicsProperties_ResponseArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,s)=>{this._wrappers[s].copy(e)}))}static freeArray(e){let s=e.data;s.length=e.size;for(let r=0;r<e.size;r++)SetPhysicsProperties_ResponseWrapper.freeStruct(s[r])}static get elementType(){return SetPhysicsProperties_ResponseWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return SetPhysicsProperties_ResponseArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=SetPhysicsProperties_ResponseWrapper;