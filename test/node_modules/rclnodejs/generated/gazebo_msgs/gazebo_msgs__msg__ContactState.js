"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),WrenchWrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Wrench.js"),Vector3Wrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Vector3.js"),Float64Wrapper=require("../../generated/std_msgs/std_msgs__msg__Float64.js"),ContactStateRefStruct=StructType({info:primitiveTypes.string,collision1_name:primitiveTypes.string,collision2_name:primitiveTypes.string,wrenches:WrenchWrapper.refObjectArrayType,total_wrench:WrenchWrapper.refObjectType,contact_positions:Vector3Wrapper.refObjectArrayType,contact_normals:Vector3Wrapper.refObjectArrayType,depths:Float64Wrapper.refObjectArrayType}),ContactStateRefArray=ArrayType(ContactStateRefStruct),ContactStateRefStructArray=StructType({data:ContactStateRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class ContactStateWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new ContactStateRefStruct(e._refObject.toObject()),this._wrapperFields.info=new StringWrapper(e._wrapperFields.info),this._wrapperFields.collision1_name=new StringWrapper(e._wrapperFields.collision1_name),this._wrapperFields.collision2_name=new StringWrapper(e._wrapperFields.collision2_name),this._wrapperFields.wrenches=WrenchWrapper.createArray(),this._wrapperFields.wrenches.copy(e._wrapperFields.wrenches),this._wrapperFields.total_wrench=new WrenchWrapper(e._wrapperFields.total_wrench),this._wrapperFields.contact_positions=Vector3Wrapper.createArray(),this._wrapperFields.contact_positions.copy(e._wrapperFields.contact_positions),this._wrapperFields.contact_normals=Vector3Wrapper.createArray(),this._wrapperFields.contact_normals.copy(e._wrapperFields.contact_normals),this._wrapperFields.depths=Float64Wrapper.createArray(),this._wrapperFields.depths.copy(e._wrapperFields.depths)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new ContactStateRefStruct,this._wrapperFields.info=new StringWrapper,this._wrapperFields.collision1_name=new StringWrapper,this._wrapperFields.collision2_name=new StringWrapper,this._wrapperFields.wrenches=WrenchWrapper.createArray(),this._wrapperFields.total_wrench=new WrenchWrapper,this._wrapperFields.contact_positions=Vector3Wrapper.createArray(),this._wrapperFields.contact_normals=Vector3Wrapper.createArray(),this._wrapperFields.depths=Float64Wrapper.createArray()}static createFromRefObject(e){let r=new ContactStateWrapper;return r.copyRefObject(e),r}static createArray(){return new ContactStateArrayWrapper}static get ArrayType(){return ContactStateArrayWrapper}static get refObjectArrayType(){return ContactStateRefStructArray}static get refObjectType(){return ContactStateRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e&&this._wrapperFields.info.freeze(e),this._refObject.info=this._wrapperFields.info.refObject,e&&this._wrapperFields.collision1_name.freeze(e),this._refObject.collision1_name=this._wrapperFields.collision1_name.refObject,e&&this._wrapperFields.collision2_name.freeze(e),this._refObject.collision2_name=this._wrapperFields.collision2_name.refObject,e&&this._wrapperFields.wrenches.fill([]),this._wrapperFields.wrenches.freeze(e),this._refObject.wrenches=this._wrapperFields.wrenches.refObject,this._wrapperFields.total_wrench.freeze(e),this._refObject.total_wrench=this._wrapperFields.total_wrench.refObject,e&&this._wrapperFields.contact_positions.fill([]),this._wrapperFields.contact_positions.freeze(e),this._refObject.contact_positions=this._wrapperFields.contact_positions.refObject,e&&this._wrapperFields.contact_normals.fill([]),this._wrapperFields.contact_normals.freeze(e),this._refObject.contact_normals=this._wrapperFields.contact_normals.refObject,e&&this._wrapperFields.depths.fill(Float64Array.from([])),this._wrapperFields.depths.freeze(e),this._refObject.depths=this._wrapperFields.depths.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.info.data=e.info.data,this._wrapperFields.collision1_name.data=e.collision1_name.data,this._wrapperFields.collision2_name.data=e.collision2_name.data,this._wrapperFields.wrenches.copyRefObject(e.wrenches),this._wrapperFields.total_wrench.copyRefObject(e.total_wrench),this._wrapperFields.contact_positions.copyRefObject(e.contact_positions),this._wrapperFields.contact_normals.copyRefObject(e.contact_normals),this._wrapperFields.depths.copyRefObject(e.depths)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){StringWrapper.freeStruct(e.info),StringWrapper.freeStruct(e.collision1_name),StringWrapper.freeStruct(e.collision2_name),0!=e.wrenches.size&&(WrenchWrapper.ArrayType.freeArray(e.wrenches),WrenchWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.wrenches,WrenchWrapper.refObjectArrayType,"data")),WrenchWrapper.freeStruct(e.total_wrench),0!=e.contact_positions.size&&(Vector3Wrapper.ArrayType.freeArray(e.contact_positions),Vector3Wrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.contact_positions,Vector3Wrapper.refObjectArrayType,"data")),0!=e.contact_normals.size&&(Vector3Wrapper.ArrayType.freeArray(e.contact_normals),Vector3Wrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.contact_normals,Vector3Wrapper.refObjectArrayType,"data")),0!=e.depths.size&&(Float64Wrapper.ArrayType.freeArray(e.depths),Float64Wrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.depths,Float64Wrapper.refObjectArrayType,"data"))}static destoryRawROS(e){ContactStateWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"gazebo_msgs",subFolder:"msg",interfaceName:"ContactState"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get info(){return this._wrapperFields.info.data}set info(e){this._wrapperFields.info.data=e}get collision1_name(){return this._wrapperFields.collision1_name.data}set collision1_name(e){this._wrapperFields.collision1_name.data=e}get collision2_name(){return this._wrapperFields.collision2_name.data}set collision2_name(e){this._wrapperFields.collision2_name.data=e}get wrenches(){return this._wrapperFields.wrenches}set wrenches(e){this._wrapperFields.wrenches.fill(e)}get total_wrench(){return this._wrapperFields.total_wrench}set total_wrench(e){e instanceof WrenchWrapper?this._wrapperFields.total_wrench.copy(e):this._wrapperFields.total_wrench.copy(new WrenchWrapper(e))}get contact_positions(){return this._wrapperFields.contact_positions}set contact_positions(e){this._wrapperFields.contact_positions.fill(e)}get contact_normals(){return this._wrapperFields.contact_normals}set contact_normals(e){this._wrapperFields.contact_normals.fill(e)}get depths(){return this._wrapperFields.depths.data}set depths(e){this._wrapperFields.depths.fill(e)}copyRefObject(e){this._refObject=new ContactStateRefStruct(e.toObject()),this._wrapperFields.info.copyRefObject(this._refObject.info),this._wrapperFields.collision1_name.copyRefObject(this._refObject.collision1_name),this._wrapperFields.collision2_name.copyRefObject(this._refObject.collision2_name),this._wrapperFields.wrenches.copyRefObject(this._refObject.wrenches),this._wrapperFields.total_wrench.copyRefObject(this._refObject.total_wrench),this._wrapperFields.contact_positions.copyRefObject(this._refObject.contact_positions),this._wrapperFields.contact_normals.copyRefObject(this._refObject.contact_normals),this._wrapperFields.depths.copyRefObject(this._refObject.depths)}copy(e){this._refObject=new ContactStateRefStruct(e._refObject.toObject()),this._wrapperFields.info.copy(e._wrapperFields.info),this._wrapperFields.collision1_name.copy(e._wrapperFields.collision1_name),this._wrapperFields.collision2_name.copy(e._wrapperFields.collision2_name),this._wrapperFields.wrenches.copy(e._wrapperFields.wrenches),this._wrapperFields.total_wrench.copy(e._wrapperFields.total_wrench),this._wrapperFields.contact_positions.copy(e._wrapperFields.contact_positions),this._wrapperFields.contact_normals.copy(e._wrapperFields.contact_normals),this._wrapperFields.depths.copy(e._wrapperFields.depths)}static get classType(){return ContactStateWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"info",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"collision1_name",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"collision2_name",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"wrenches",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"geometry_msgs",type:"Wrench",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"total_wrench",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"geometry_msgs",type:"Wrench",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"contact_positions",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"geometry_msgs",type:"Vector3",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"contact_normals",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"geometry_msgs",type:"Vector3",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"depths",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"gazebo_msgs",type:"ContactState",stringUpperBound:null,isPrimitiveType:!1},msgName:"ContactState"}}hasMember(e){return-1!==["info","collision1_name","collision2_name","wrenches","total_wrench","contact_positions","contact_normals","depths"].indexOf(e)}}class ContactStateArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof ContactStateWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new ContactStateWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to ContactStateArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to ContactStateArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new ContactStateRefArray(e),this._refObject=new ContactStateRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new ContactStateWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof ContactStateArrayWrapper))throw new TypeError('Invalid argument: should provide "ContactStateArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)ContactStateWrapper.freeStruct(r[t])}static get elementType(){return ContactStateWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return ContactStateArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=ContactStateWrapper;