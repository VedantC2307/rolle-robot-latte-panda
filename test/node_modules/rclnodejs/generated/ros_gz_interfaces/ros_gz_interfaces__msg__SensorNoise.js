"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),HeaderWrapper=require("../../generated/std_msgs/std_msgs__msg__Header.js"),SensorNoiseRefStruct=StructType({header:HeaderWrapper.refObjectType,type:primitiveTypes.uint8,mean:primitiveTypes.float64,stddev:primitiveTypes.float64,bias_mean:primitiveTypes.float64,bias_stddev:primitiveTypes.float64,precision:primitiveTypes.float64,dynamic_bias_stddev:primitiveTypes.float64,dynamic_bias_correlation_time:primitiveTypes.float64}),SensorNoiseRefArray=ArrayType(SensorNoiseRefStruct),SensorNoiseRefStructArray=StructType({data:SensorNoiseRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class SensorNoiseWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new SensorNoiseRefStruct(e._refObject.toObject()),this._wrapperFields.header=new HeaderWrapper(e._wrapperFields.header)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new SensorNoiseRefStruct,this._wrapperFields.header=new HeaderWrapper}static createFromRefObject(e){let r=new SensorNoiseWrapper;return r.copyRefObject(e),r}static createArray(){return new SensorNoiseArrayWrapper}static get ArrayType(){return SensorNoiseArrayWrapper}static get refObjectArrayType(){return SensorNoiseRefStructArray}static get refObjectType(){return SensorNoiseRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.header.freeze(e),this._refObject.header=this._wrapperFields.header.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.header.copyRefObject(e.header),this._refObject.type=e.type,this._refObject.mean=e.mean,this._refObject.stddev=e.stddev,this._refObject.bias_mean=e.bias_mean,this._refObject.bias_stddev=e.bias_stddev,this._refObject.precision=e.precision,this._refObject.dynamic_bias_stddev=e.dynamic_bias_stddev,this._refObject.dynamic_bias_correlation_time=e.dynamic_bias_correlation_time}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){HeaderWrapper.freeStruct(e.header)}static destoryRawROS(e){SensorNoiseWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"ros_gz_interfaces",subFolder:"msg",interfaceName:"SensorNoise"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get header(){return this._wrapperFields.header}set header(e){e instanceof HeaderWrapper?this._wrapperFields.header.copy(e):this._wrapperFields.header.copy(new HeaderWrapper(e))}get type(){return this._refObject.type}set type(e){this._refObject.type=e}get mean(){return this._refObject.mean}set mean(e){this._refObject.mean=e}get stddev(){return this._refObject.stddev}set stddev(e){this._refObject.stddev=e}get bias_mean(){return this._refObject.bias_mean}set bias_mean(e){this._refObject.bias_mean=e}get bias_stddev(){return this._refObject.bias_stddev}set bias_stddev(e){this._refObject.bias_stddev=e}get precision(){return this._refObject.precision}set precision(e){this._refObject.precision=e}get dynamic_bias_stddev(){return this._refObject.dynamic_bias_stddev}set dynamic_bias_stddev(e){this._refObject.dynamic_bias_stddev=e}get dynamic_bias_correlation_time(){return this._refObject.dynamic_bias_correlation_time}set dynamic_bias_correlation_time(e){this._refObject.dynamic_bias_correlation_time=e}copyRefObject(e){this._refObject=new SensorNoiseRefStruct(e.toObject()),this._wrapperFields.header.copyRefObject(this._refObject.header)}copy(e){this._refObject=new SensorNoiseRefStruct(e._refObject.toObject()),this._wrapperFields.header.copy(e._wrapperFields.header)}static get classType(){return SensorNoiseWrapper}static get ROSMessageDef(){return{constants:[{type:"uint8",name:"NONE",value:0},{type:"uint8",name:"GAUSSIAN",value:2},{type:"uint8",name:"GAUSSIAN_QUANTIZED",value:3}],fields:[{name:"header",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"std_msgs",type:"Header",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"type",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"uint8",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"mean",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"stddev",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"bias_mean",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"bias_stddev",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"precision",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"dynamic_bias_stddev",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"dynamic_bias_correlation_time",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"ros_gz_interfaces",type:"SensorNoise",stringUpperBound:null,isPrimitiveType:!1},msgName:"SensorNoise"}}hasMember(e){return-1!==["header","type","mean","stddev","bias_mean","bias_stddev","precision","dynamic_bias_stddev","dynamic_bias_correlation_time"].indexOf(e)}}class SensorNoiseArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof SensorNoiseWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new SensorNoiseWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to SensorNoiseArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to SensorNoiseArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new SensorNoiseRefArray(e),this._refObject=new SensorNoiseRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new SensorNoiseWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof SensorNoiseArrayWrapper))throw new TypeError('Invalid argument: should provide "SensorNoiseArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)SensorNoiseWrapper.freeStruct(r[t])}static get elementType(){return SensorNoiseWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return SensorNoiseArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}Object.defineProperty(SensorNoiseWrapper,"NONE",{value:0,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(SensorNoiseWrapper,"GAUSSIAN",{value:2,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(SensorNoiseWrapper,"GAUSSIAN_QUANTIZED",{value:3,writable:!1,enumerable:!0,configurable:!0}),module.exports=SensorNoiseWrapper;