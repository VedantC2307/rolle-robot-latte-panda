"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),PoseStampedWrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__PoseStamped.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),NavigateThroughPoses_GoalRefStruct=StructType({poses:PoseStampedWrapper.refObjectArrayType,behavior_tree:primitiveTypes.string}),NavigateThroughPoses_GoalRefArray=ArrayType(NavigateThroughPoses_GoalRefStruct),NavigateThroughPoses_GoalRefStructArray=StructType({data:NavigateThroughPoses_GoalRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class NavigateThroughPoses_GoalWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new NavigateThroughPoses_GoalRefStruct(e._refObject.toObject()),this._wrapperFields.poses=PoseStampedWrapper.createArray(),this._wrapperFields.poses.copy(e._wrapperFields.poses),this._wrapperFields.behavior_tree=new StringWrapper(e._wrapperFields.behavior_tree)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new NavigateThroughPoses_GoalRefStruct,this._wrapperFields.poses=PoseStampedWrapper.createArray(),this._wrapperFields.behavior_tree=new StringWrapper}static createFromRefObject(e){let r=new NavigateThroughPoses_GoalWrapper;return r.copyRefObject(e),r}static createArray(){return new NavigateThroughPoses_GoalArrayWrapper}static get ArrayType(){return NavigateThroughPoses_GoalArrayWrapper}static get refObjectArrayType(){return NavigateThroughPoses_GoalRefStructArray}static get refObjectType(){return NavigateThroughPoses_GoalRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e&&this._wrapperFields.poses.fill([]),this._wrapperFields.poses.freeze(e),this._refObject.poses=this._wrapperFields.poses.refObject,e&&this._wrapperFields.behavior_tree.freeze(e),this._refObject.behavior_tree=this._wrapperFields.behavior_tree.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.poses.copyRefObject(e.poses),this._wrapperFields.behavior_tree.data=e.behavior_tree.data}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){0!=e.poses.size&&(PoseStampedWrapper.ArrayType.freeArray(e.poses),PoseStampedWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.poses,PoseStampedWrapper.refObjectArrayType,"data")),StringWrapper.freeStruct(e.behavior_tree)}static destoryRawROS(e){NavigateThroughPoses_GoalWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"nav2_msgs",subFolder:"action",interfaceName:"NavigateThroughPoses_Goal"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get poses(){return this._wrapperFields.poses}set poses(e){this._wrapperFields.poses.fill(e)}get behavior_tree(){return this._wrapperFields.behavior_tree.data}set behavior_tree(e){this._wrapperFields.behavior_tree.data=e}copyRefObject(e){this._refObject=new NavigateThroughPoses_GoalRefStruct(e.toObject()),this._wrapperFields.poses.copyRefObject(this._refObject.poses),this._wrapperFields.behavior_tree.copyRefObject(this._refObject.behavior_tree)}copy(e){this._refObject=new NavigateThroughPoses_GoalRefStruct(e._refObject.toObject()),this._wrapperFields.poses.copy(e._wrapperFields.poses),this._wrapperFields.behavior_tree.copy(e._wrapperFields.behavior_tree)}static get classType(){return NavigateThroughPoses_GoalWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"poses",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"geometry_msgs",type:"PoseStamped",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"behavior_tree",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"nav2_msgs",type:"NavigateThroughPoses_Goal",stringUpperBound:null,isPrimitiveType:!1},msgName:"NavigateThroughPoses_Goal"}}hasMember(e){return-1!==["poses","behavior_tree"].indexOf(e)}}class NavigateThroughPoses_GoalArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof NavigateThroughPoses_GoalWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new NavigateThroughPoses_GoalWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to NavigateThroughPoses_GoalArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to NavigateThroughPoses_GoalArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new NavigateThroughPoses_GoalRefArray(e),this._refObject=new NavigateThroughPoses_GoalRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new NavigateThroughPoses_GoalWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof NavigateThroughPoses_GoalArrayWrapper))throw new TypeError('Invalid argument: should provide "NavigateThroughPoses_GoalArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)NavigateThroughPoses_GoalWrapper.freeStruct(r[t])}static get elementType(){return NavigateThroughPoses_GoalWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return NavigateThroughPoses_GoalArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=NavigateThroughPoses_GoalWrapper;