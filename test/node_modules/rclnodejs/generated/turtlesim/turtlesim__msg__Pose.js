"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),PoseRefStruct=StructType({x:primitiveTypes.float32,y:primitiveTypes.float32,theta:primitiveTypes.float32,linear_velocity:primitiveTypes.float32,angular_velocity:primitiveTypes.float32}),PoseRefArray=ArrayType(PoseRefStruct),PoseRefStructArray=StructType({data:PoseRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class PoseWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?this._refObject=new PoseRefStruct(e._refObject.toObject()):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new PoseRefStruct}static createFromRefObject(e){let r=new PoseWrapper;return r.copyRefObject(e),r}static createArray(){return new PoseArrayWrapper}static get ArrayType(){return PoseArrayWrapper}static get refObjectArrayType(){return PoseRefStructArray}static get refObjectType(){return PoseRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._refObject.x=e.x,this._refObject.y=e.y,this._refObject.theta=e.theta,this._refObject.linear_velocity=e.linear_velocity,this._refObject.angular_velocity=e.angular_velocity}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){}static destoryRawROS(e){PoseWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"turtlesim",subFolder:"msg",interfaceName:"Pose"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get x(){return this._refObject.x}set x(e){this._refObject.x=e}get y(){return this._refObject.y}set y(e){this._refObject.y=e}get theta(){return this._refObject.theta}set theta(e){this._refObject.theta=e}get linear_velocity(){return this._refObject.linear_velocity}set linear_velocity(e){this._refObject.linear_velocity=e}get angular_velocity(){return this._refObject.angular_velocity}set angular_velocity(e){this._refObject.angular_velocity=e}copyRefObject(e){this._refObject=new PoseRefStruct(e.toObject())}copy(e){this._refObject=new PoseRefStruct(e._refObject.toObject())}static get classType(){return PoseWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"x",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"y",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"theta",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"linear_velocity",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"angular_velocity",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"turtlesim",type:"Pose",stringUpperBound:null,isPrimitiveType:!1},msgName:"Pose"}}hasMember(e){return-1!==["x","y","theta","linear_velocity","angular_velocity"].indexOf(e)}}class PoseArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof PoseWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new PoseWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to PoseArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to PoseArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new PoseRefArray(e),this._refObject=new PoseRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new PoseWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof PoseArrayWrapper))throw new TypeError('Invalid argument: should provide "PoseArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)PoseWrapper.freeStruct(r[t])}static get elementType(){return PoseWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return PoseArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=PoseWrapper;