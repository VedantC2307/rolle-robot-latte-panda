"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),EntityWrapper=require("../../generated/ros_gz_interfaces/ros_gz_interfaces__msg__Entity.js"),Vector3Wrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Vector3.js"),Float64Wrapper=require("../../generated/std_msgs/std_msgs__msg__Float64.js"),JointWrenchWrapper=require("../../generated/ros_gz_interfaces/ros_gz_interfaces__msg__JointWrench.js"),ContactRefStruct=StructType({collision1:EntityWrapper.refObjectType,collision2:EntityWrapper.refObjectType,positions:Vector3Wrapper.refObjectArrayType,normals:Vector3Wrapper.refObjectArrayType,depths:Float64Wrapper.refObjectArrayType,wrenches:JointWrenchWrapper.refObjectArrayType}),ContactRefArray=ArrayType(ContactRefStruct),ContactRefStructArray=StructType({data:ContactRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class ContactWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new ContactRefStruct(e._refObject.toObject()),this._wrapperFields.collision1=new EntityWrapper(e._wrapperFields.collision1),this._wrapperFields.collision2=new EntityWrapper(e._wrapperFields.collision2),this._wrapperFields.positions=Vector3Wrapper.createArray(),this._wrapperFields.positions.copy(e._wrapperFields.positions),this._wrapperFields.normals=Vector3Wrapper.createArray(),this._wrapperFields.normals.copy(e._wrapperFields.normals),this._wrapperFields.depths=Float64Wrapper.createArray(),this._wrapperFields.depths.copy(e._wrapperFields.depths),this._wrapperFields.wrenches=JointWrenchWrapper.createArray(),this._wrapperFields.wrenches.copy(e._wrapperFields.wrenches)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new ContactRefStruct,this._wrapperFields.collision1=new EntityWrapper,this._wrapperFields.collision2=new EntityWrapper,this._wrapperFields.positions=Vector3Wrapper.createArray(),this._wrapperFields.normals=Vector3Wrapper.createArray(),this._wrapperFields.depths=Float64Wrapper.createArray(),this._wrapperFields.wrenches=JointWrenchWrapper.createArray()}static createFromRefObject(e){let r=new ContactWrapper;return r.copyRefObject(e),r}static createArray(){return new ContactArrayWrapper}static get ArrayType(){return ContactArrayWrapper}static get refObjectArrayType(){return ContactRefStructArray}static get refObjectType(){return ContactRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.collision1.freeze(e),this._refObject.collision1=this._wrapperFields.collision1.refObject,this._wrapperFields.collision2.freeze(e),this._refObject.collision2=this._wrapperFields.collision2.refObject,e&&this._wrapperFields.positions.fill([]),this._wrapperFields.positions.freeze(e),this._refObject.positions=this._wrapperFields.positions.refObject,e&&this._wrapperFields.normals.fill([]),this._wrapperFields.normals.freeze(e),this._refObject.normals=this._wrapperFields.normals.refObject,e&&this._wrapperFields.depths.fill(Float64Array.from([])),this._wrapperFields.depths.freeze(e),this._refObject.depths=this._wrapperFields.depths.refObject,e&&this._wrapperFields.wrenches.fill([]),this._wrapperFields.wrenches.freeze(e),this._refObject.wrenches=this._wrapperFields.wrenches.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.collision1.copyRefObject(e.collision1),this._wrapperFields.collision2.copyRefObject(e.collision2),this._wrapperFields.positions.copyRefObject(e.positions),this._wrapperFields.normals.copyRefObject(e.normals),this._wrapperFields.depths.copyRefObject(e.depths),this._wrapperFields.wrenches.copyRefObject(e.wrenches)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){EntityWrapper.freeStruct(e.collision1),EntityWrapper.freeStruct(e.collision2),0!=e.positions.size&&(Vector3Wrapper.ArrayType.freeArray(e.positions),Vector3Wrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.positions,Vector3Wrapper.refObjectArrayType,"data")),0!=e.normals.size&&(Vector3Wrapper.ArrayType.freeArray(e.normals),Vector3Wrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.normals,Vector3Wrapper.refObjectArrayType,"data")),0!=e.depths.size&&(Float64Wrapper.ArrayType.freeArray(e.depths),Float64Wrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.depths,Float64Wrapper.refObjectArrayType,"data")),0!=e.wrenches.size&&(JointWrenchWrapper.ArrayType.freeArray(e.wrenches),JointWrenchWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.wrenches,JointWrenchWrapper.refObjectArrayType,"data"))}static destoryRawROS(e){ContactWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"ros_gz_interfaces",subFolder:"msg",interfaceName:"Contact"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get collision1(){return this._wrapperFields.collision1}set collision1(e){e instanceof EntityWrapper?this._wrapperFields.collision1.copy(e):this._wrapperFields.collision1.copy(new EntityWrapper(e))}get collision2(){return this._wrapperFields.collision2}set collision2(e){e instanceof EntityWrapper?this._wrapperFields.collision2.copy(e):this._wrapperFields.collision2.copy(new EntityWrapper(e))}get positions(){return this._wrapperFields.positions}set positions(e){this._wrapperFields.positions.fill(e)}get normals(){return this._wrapperFields.normals}set normals(e){this._wrapperFields.normals.fill(e)}get depths(){return this._wrapperFields.depths.data}set depths(e){this._wrapperFields.depths.fill(e)}get wrenches(){return this._wrapperFields.wrenches}set wrenches(e){this._wrapperFields.wrenches.fill(e)}copyRefObject(e){this._refObject=new ContactRefStruct(e.toObject()),this._wrapperFields.collision1.copyRefObject(this._refObject.collision1),this._wrapperFields.collision2.copyRefObject(this._refObject.collision2),this._wrapperFields.positions.copyRefObject(this._refObject.positions),this._wrapperFields.normals.copyRefObject(this._refObject.normals),this._wrapperFields.depths.copyRefObject(this._refObject.depths),this._wrapperFields.wrenches.copyRefObject(this._refObject.wrenches)}copy(e){this._refObject=new ContactRefStruct(e._refObject.toObject()),this._wrapperFields.collision1.copy(e._wrapperFields.collision1),this._wrapperFields.collision2.copy(e._wrapperFields.collision2),this._wrapperFields.positions.copy(e._wrapperFields.positions),this._wrapperFields.normals.copy(e._wrapperFields.normals),this._wrapperFields.depths.copy(e._wrapperFields.depths),this._wrapperFields.wrenches.copy(e._wrapperFields.wrenches)}static get classType(){return ContactWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"collision1",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"ros_gz_interfaces",type:"Entity",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"collision2",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"ros_gz_interfaces",type:"Entity",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"positions",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"geometry_msgs",type:"Vector3",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"normals",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"geometry_msgs",type:"Vector3",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"depths",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"wrenches",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"ros_gz_interfaces",type:"JointWrench",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"ros_gz_interfaces",type:"Contact",stringUpperBound:null,isPrimitiveType:!1},msgName:"Contact"}}hasMember(e){return-1!==["collision1","collision2","positions","normals","depths","wrenches"].indexOf(e)}}class ContactArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof ContactWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new ContactWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to ContactArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to ContactArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new ContactRefArray(e),this._refObject=new ContactRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new ContactWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof ContactArrayWrapper))throw new TypeError('Invalid argument: should provide "ContactArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)ContactWrapper.freeStruct(r[t])}static get elementType(){return ContactWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return ContactArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=ContactWrapper;