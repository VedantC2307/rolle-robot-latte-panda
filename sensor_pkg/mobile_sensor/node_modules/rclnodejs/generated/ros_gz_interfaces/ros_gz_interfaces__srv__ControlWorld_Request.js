"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),WorldControlWrapper=require("../../generated/ros_gz_interfaces/ros_gz_interfaces__msg__WorldControl.js"),ControlWorld_RequestRefStruct=StructType({world_control:WorldControlWrapper.refObjectType}),ControlWorld_RequestRefArray=ArrayType(ControlWorld_RequestRefStruct),ControlWorld_RequestRefStructArray=StructType({data:ControlWorld_RequestRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class ControlWorld_RequestWrapper{constructor(r){this._initialize(),this._setDefaults(),"object"==typeof r&&r._refObject?(this._refObject=new ControlWorld_RequestRefStruct(r._refObject.toObject()),this._wrapperFields.world_control=new WorldControlWrapper(r._wrapperFields.world_control)):void 0!==r&&translator.constructFromPlanObject(this,r),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new ControlWorld_RequestRefStruct,this._wrapperFields.world_control=new WorldControlWrapper}static createFromRefObject(r){let e=new ControlWorld_RequestWrapper;return e.copyRefObject(r),e}static createArray(){return new ControlWorld_RequestArrayWrapper}static get ArrayType(){return ControlWorld_RequestArrayWrapper}static get refObjectArrayType(){return ControlWorld_RequestRefStructArray}static get refObjectType(){return ControlWorld_RequestRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(r){this._wrapperFields.world_control.freeze(r),this._refObject.world_control=this._wrapperFields.world_control.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(r){this._wrapperFields.world_control.copyRefObject(r.world_control)}toPlainObject(r){return translator.toPlainObject(this,r)}static freeStruct(r){WorldControlWrapper.freeStruct(r.world_control)}static destoryRawROS(r){ControlWorld_RequestWrapper.freeStruct(r.refObject)}static type(){return{pkgName:"ros_gz_interfaces",subFolder:"srv",interfaceName:"ControlWorld_Request"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get world_control(){return this._wrapperFields.world_control}set world_control(r){r instanceof WorldControlWrapper?this._wrapperFields.world_control.copy(r):this._wrapperFields.world_control.copy(new WorldControlWrapper(r))}copyRefObject(r){this._refObject=new ControlWorld_RequestRefStruct(r.toObject()),this._wrapperFields.world_control.copyRefObject(this._refObject.world_control)}copy(r){this._refObject=new ControlWorld_RequestRefStruct(r._refObject.toObject()),this._wrapperFields.world_control.copy(r._wrapperFields.world_control)}static get classType(){return ControlWorld_RequestWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"world_control",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"ros_gz_interfaces",type:"WorldControl",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"ros_gz_interfaces",type:"ControlWorld_Request",stringUpperBound:null,isPrimitiveType:!1},msgName:"ControlWorld_Request"}}hasMember(r){return-1!==["world_control"].indexOf(r)}}class ControlWorld_RequestArrayWrapper{constructor(r=0){this._resize(r)}toRawROS(){return this._refObject.ref()}fill(r){const e=r.length;this._resize(e),r.forEach(((r,e)=>{r instanceof ControlWorld_RequestWrapper?this._wrappers[e].copy(r):this._wrappers[e]=new ControlWorld_RequestWrapper(r)}))}freeze(r){this._wrappers.forEach(((e,t)=>{e.freeze(r),this._refArray[t]=e.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(r){if("number"!=typeof r)throw new TypeError("Invalid argument: should provide a number to ControlWorld_RequestArrayWrapper.size setter");return this._resize(r)}get capacity(){return this._wrappers.length}set capacity(r){if("number"!=typeof r)throw new TypeError("Invalid argument: should provide a number to ControlWorld_RequestArrayWrapper.capacity setter");return this._resize(r)}get refObject(){return this._refObject}_resize(r){if(r<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new ControlWorld_RequestRefArray(r),this._refObject=new ControlWorld_RequestRefStructArray,this._refObject.size=r,this._refObject.capacity=r,this._wrappers=new Array;for(let e=0;e<r;e++)this._wrappers.push(new ControlWorld_RequestWrapper)}copyRefObject(r){this._refObject=r;let e=this._refObject.data;e.length=this._refObject.size,this._resize(this._refObject.size);for(let r=0;r<this._refObject.size;r++)this._wrappers[r].copyRefObject(e[r])}copy(r){if(!(r instanceof ControlWorld_RequestArrayWrapper))throw new TypeError('Invalid argument: should provide "ControlWorld_RequestArrayWrapper".');this._resize(r.size),r._wrappers.forEach(((r,e)=>{this._wrappers[e].copy(r)}))}static freeArray(r){let e=r.data;e.length=r.size;for(let t=0;t<r.size;t++)ControlWorld_RequestWrapper.freeStruct(e[t])}static get elementType(){return ControlWorld_RequestWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return ControlWorld_RequestArrayWrapper}toPlainObject(r){return translator.toPlainObject(this,r)}}module.exports=ControlWorld_RequestWrapper;