"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),PointFieldRefStruct=StructType({name:primitiveTypes.string,offset:primitiveTypes.uint32,datatype:primitiveTypes.uint8,count:primitiveTypes.uint32}),PointFieldRefArray=ArrayType(PointFieldRefStruct),PointFieldRefStructArray=StructType({data:PointFieldRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class PointFieldWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new PointFieldRefStruct(e._refObject.toObject()),this._wrapperFields.name=new StringWrapper(e._wrapperFields.name)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new PointFieldRefStruct,this._wrapperFields.name=new StringWrapper}static createFromRefObject(e){let t=new PointFieldWrapper;return t.copyRefObject(e),t}static createArray(){return new PointFieldArrayWrapper}static get ArrayType(){return PointFieldArrayWrapper}static get refObjectArrayType(){return PointFieldRefStructArray}static get refObjectType(){return PointFieldRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e&&this._wrapperFields.name.freeze(e),this._refObject.name=this._wrapperFields.name.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.name.data=e.name.data,this._refObject.offset=e.offset,this._refObject.datatype=e.datatype,this._refObject.count=e.count}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){StringWrapper.freeStruct(e.name)}static destoryRawROS(e){PointFieldWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"sensor_msgs",subFolder:"msg",interfaceName:"PointField"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get name(){return this._wrapperFields.name.data}set name(e){this._wrapperFields.name.data=e}get offset(){return this._refObject.offset}set offset(e){this._refObject.offset=e}get datatype(){return this._refObject.datatype}set datatype(e){this._refObject.datatype=e}get count(){return this._refObject.count}set count(e){this._refObject.count=e}copyRefObject(e){this._refObject=new PointFieldRefStruct(e.toObject()),this._wrapperFields.name.copyRefObject(this._refObject.name)}copy(e){this._refObject=new PointFieldRefStruct(e._refObject.toObject()),this._wrapperFields.name.copy(e._wrapperFields.name)}static get classType(){return PointFieldWrapper}static get ROSMessageDef(){return{constants:[{type:"uint8",name:"INT8",value:1},{type:"uint8",name:"UINT8",value:2},{type:"uint8",name:"INT16",value:3},{type:"uint8",name:"UINT16",value:4},{type:"uint8",name:"INT32",value:5},{type:"uint8",name:"UINT32",value:6},{type:"uint8",name:"FLOAT32",value:7},{type:"uint8",name:"FLOAT64",value:8}],fields:[{name:"name",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"offset",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"uint32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"datatype",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"uint8",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"count",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"uint32",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"sensor_msgs",type:"PointField",stringUpperBound:null,isPrimitiveType:!1},msgName:"PointField"}}hasMember(e){return-1!==["name","offset","datatype","count"].indexOf(e)}}class PointFieldArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const t=e.length;this._resize(t),e.forEach(((e,t)=>{e instanceof PointFieldWrapper?this._wrappers[t].copy(e):this._wrappers[t]=new PointFieldWrapper(e)}))}freeze(e){this._wrappers.forEach(((t,r)=>{t.freeze(e),this._refArray[r]=t.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to PointFieldArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to PointFieldArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new PointFieldRefArray(e),this._refObject=new PointFieldRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let t=0;t<e;t++)this._wrappers.push(new PointFieldWrapper)}copyRefObject(e){this._refObject=e;let t=this._refObject.data;t.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(t[e])}copy(e){if(!(e instanceof PointFieldArrayWrapper))throw new TypeError('Invalid argument: should provide "PointFieldArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,t)=>{this._wrappers[t].copy(e)}))}static freeArray(e){let t=e.data;t.length=e.size;for(let r=0;r<e.size;r++)PointFieldWrapper.freeStruct(t[r])}static get elementType(){return PointFieldWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return PointFieldArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}Object.defineProperty(PointFieldWrapper,"INT8",{value:1,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(PointFieldWrapper,"UINT8",{value:2,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(PointFieldWrapper,"INT16",{value:3,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(PointFieldWrapper,"UINT16",{value:4,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(PointFieldWrapper,"INT32",{value:5,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(PointFieldWrapper,"UINT32",{value:6,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(PointFieldWrapper,"FLOAT32",{value:7,writable:!1,enumerable:!0,configurable:!0}),Object.defineProperty(PointFieldWrapper,"FLOAT64",{value:8,writable:!1,enumerable:!0,configurable:!0}),module.exports=PointFieldWrapper;