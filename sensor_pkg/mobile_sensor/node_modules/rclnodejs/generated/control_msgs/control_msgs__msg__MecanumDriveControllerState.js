"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),HeaderWrapper=require("../../generated/std_msgs/std_msgs__msg__Header.js"),TwistWrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Twist.js"),MecanumDriveControllerStateRefStruct=StructType({header:HeaderWrapper.refObjectType,front_left_wheel_velocity:primitiveTypes.float64,back_left_wheel_velocity:primitiveTypes.float64,back_right_wheel_velocity:primitiveTypes.float64,front_right_wheel_velocity:primitiveTypes.float64,reference_velocity:TwistWrapper.refObjectType}),MecanumDriveControllerStateRefArray=ArrayType(MecanumDriveControllerStateRefStruct),MecanumDriveControllerStateRefStructArray=StructType({data:MecanumDriveControllerStateRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class MecanumDriveControllerStateWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new MecanumDriveControllerStateRefStruct(e._refObject.toObject()),this._wrapperFields.header=new HeaderWrapper(e._wrapperFields.header),this._wrapperFields.reference_velocity=new TwistWrapper(e._wrapperFields.reference_velocity)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new MecanumDriveControllerStateRefStruct,this._wrapperFields.header=new HeaderWrapper,this._wrapperFields.reference_velocity=new TwistWrapper}static createFromRefObject(e){let r=new MecanumDriveControllerStateWrapper;return r.copyRefObject(e),r}static createArray(){return new MecanumDriveControllerStateArrayWrapper}static get ArrayType(){return MecanumDriveControllerStateArrayWrapper}static get refObjectArrayType(){return MecanumDriveControllerStateRefStructArray}static get refObjectType(){return MecanumDriveControllerStateRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.header.freeze(e),this._refObject.header=this._wrapperFields.header.refObject,this._wrapperFields.reference_velocity.freeze(e),this._refObject.reference_velocity=this._wrapperFields.reference_velocity.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.header.copyRefObject(e.header),this._refObject.front_left_wheel_velocity=e.front_left_wheel_velocity,this._refObject.back_left_wheel_velocity=e.back_left_wheel_velocity,this._refObject.back_right_wheel_velocity=e.back_right_wheel_velocity,this._refObject.front_right_wheel_velocity=e.front_right_wheel_velocity,this._wrapperFields.reference_velocity.copyRefObject(e.reference_velocity)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){HeaderWrapper.freeStruct(e.header),TwistWrapper.freeStruct(e.reference_velocity)}static destoryRawROS(e){MecanumDriveControllerStateWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"control_msgs",subFolder:"msg",interfaceName:"MecanumDriveControllerState"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get header(){return this._wrapperFields.header}set header(e){e instanceof HeaderWrapper?this._wrapperFields.header.copy(e):this._wrapperFields.header.copy(new HeaderWrapper(e))}get front_left_wheel_velocity(){return this._refObject.front_left_wheel_velocity}set front_left_wheel_velocity(e){this._refObject.front_left_wheel_velocity=e}get back_left_wheel_velocity(){return this._refObject.back_left_wheel_velocity}set back_left_wheel_velocity(e){this._refObject.back_left_wheel_velocity=e}get back_right_wheel_velocity(){return this._refObject.back_right_wheel_velocity}set back_right_wheel_velocity(e){this._refObject.back_right_wheel_velocity=e}get front_right_wheel_velocity(){return this._refObject.front_right_wheel_velocity}set front_right_wheel_velocity(e){this._refObject.front_right_wheel_velocity=e}get reference_velocity(){return this._wrapperFields.reference_velocity}set reference_velocity(e){e instanceof TwistWrapper?this._wrapperFields.reference_velocity.copy(e):this._wrapperFields.reference_velocity.copy(new TwistWrapper(e))}copyRefObject(e){this._refObject=new MecanumDriveControllerStateRefStruct(e.toObject()),this._wrapperFields.header.copyRefObject(this._refObject.header),this._wrapperFields.reference_velocity.copyRefObject(this._refObject.reference_velocity)}copy(e){this._refObject=new MecanumDriveControllerStateRefStruct(e._refObject.toObject()),this._wrapperFields.header.copy(e._wrapperFields.header),this._wrapperFields.reference_velocity.copy(e._wrapperFields.reference_velocity)}static get classType(){return MecanumDriveControllerStateWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"header",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"std_msgs",type:"Header",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"front_left_wheel_velocity",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"back_left_wheel_velocity",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"back_right_wheel_velocity",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"front_right_wheel_velocity",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"reference_velocity",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"geometry_msgs",type:"Twist",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"control_msgs",type:"MecanumDriveControllerState",stringUpperBound:null,isPrimitiveType:!1},msgName:"MecanumDriveControllerState"}}hasMember(e){return-1!==["header","front_left_wheel_velocity","back_left_wheel_velocity","back_right_wheel_velocity","front_right_wheel_velocity","reference_velocity"].indexOf(e)}}class MecanumDriveControllerStateArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof MecanumDriveControllerStateWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new MecanumDriveControllerStateWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to MecanumDriveControllerStateArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to MecanumDriveControllerStateArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new MecanumDriveControllerStateRefArray(e),this._refObject=new MecanumDriveControllerStateRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new MecanumDriveControllerStateWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof MecanumDriveControllerStateArrayWrapper))throw new TypeError('Invalid argument: should provide "MecanumDriveControllerStateArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)MecanumDriveControllerStateWrapper.freeStruct(r[t])}static get elementType(){return MecanumDriveControllerStateWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return MecanumDriveControllerStateArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=MecanumDriveControllerStateWrapper;