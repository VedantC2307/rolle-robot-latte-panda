"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),TimeWrapper=require("../../generated/builtin_interfaces/builtin_interfaces__msg__Time.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),BehaviorTreeStatusChangeRefStruct=StructType({timestamp:TimeWrapper.refObjectType,node_name:primitiveTypes.string,previous_status:primitiveTypes.string,current_status:primitiveTypes.string}),BehaviorTreeStatusChangeRefArray=ArrayType(BehaviorTreeStatusChangeRefStruct),BehaviorTreeStatusChangeRefStructArray=StructType({data:BehaviorTreeStatusChangeRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class BehaviorTreeStatusChangeWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new BehaviorTreeStatusChangeRefStruct(e._refObject.toObject()),this._wrapperFields.timestamp=new TimeWrapper(e._wrapperFields.timestamp),this._wrapperFields.node_name=new StringWrapper(e._wrapperFields.node_name),this._wrapperFields.previous_status=new StringWrapper(e._wrapperFields.previous_status),this._wrapperFields.current_status=new StringWrapper(e._wrapperFields.current_status)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new BehaviorTreeStatusChangeRefStruct,this._wrapperFields.timestamp=new TimeWrapper,this._wrapperFields.node_name=new StringWrapper,this._wrapperFields.previous_status=new StringWrapper,this._wrapperFields.current_status=new StringWrapper}static createFromRefObject(e){let r=new BehaviorTreeStatusChangeWrapper;return r.copyRefObject(e),r}static createArray(){return new BehaviorTreeStatusChangeArrayWrapper}static get ArrayType(){return BehaviorTreeStatusChangeArrayWrapper}static get refObjectArrayType(){return BehaviorTreeStatusChangeRefStructArray}static get refObjectType(){return BehaviorTreeStatusChangeRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.timestamp.freeze(e),this._refObject.timestamp=this._wrapperFields.timestamp.refObject,e&&this._wrapperFields.node_name.freeze(e),this._refObject.node_name=this._wrapperFields.node_name.refObject,e&&this._wrapperFields.previous_status.freeze(e),this._refObject.previous_status=this._wrapperFields.previous_status.refObject,e&&this._wrapperFields.current_status.freeze(e),this._refObject.current_status=this._wrapperFields.current_status.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.timestamp.copyRefObject(e.timestamp),this._wrapperFields.node_name.data=e.node_name.data,this._wrapperFields.previous_status.data=e.previous_status.data,this._wrapperFields.current_status.data=e.current_status.data}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){TimeWrapper.freeStruct(e.timestamp),StringWrapper.freeStruct(e.node_name),StringWrapper.freeStruct(e.previous_status),StringWrapper.freeStruct(e.current_status)}static destoryRawROS(e){BehaviorTreeStatusChangeWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"nav2_msgs",subFolder:"msg",interfaceName:"BehaviorTreeStatusChange"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get timestamp(){return this._wrapperFields.timestamp}set timestamp(e){e instanceof TimeWrapper?this._wrapperFields.timestamp.copy(e):this._wrapperFields.timestamp.copy(new TimeWrapper(e))}get node_name(){return this._wrapperFields.node_name.data}set node_name(e){this._wrapperFields.node_name.data=e}get previous_status(){return this._wrapperFields.previous_status.data}set previous_status(e){this._wrapperFields.previous_status.data=e}get current_status(){return this._wrapperFields.current_status.data}set current_status(e){this._wrapperFields.current_status.data=e}copyRefObject(e){this._refObject=new BehaviorTreeStatusChangeRefStruct(e.toObject()),this._wrapperFields.timestamp.copyRefObject(this._refObject.timestamp),this._wrapperFields.node_name.copyRefObject(this._refObject.node_name),this._wrapperFields.previous_status.copyRefObject(this._refObject.previous_status),this._wrapperFields.current_status.copyRefObject(this._refObject.current_status)}copy(e){this._refObject=new BehaviorTreeStatusChangeRefStruct(e._refObject.toObject()),this._wrapperFields.timestamp.copy(e._wrapperFields.timestamp),this._wrapperFields.node_name.copy(e._wrapperFields.node_name),this._wrapperFields.previous_status.copy(e._wrapperFields.previous_status),this._wrapperFields.current_status.copy(e._wrapperFields.current_status)}static get classType(){return BehaviorTreeStatusChangeWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"timestamp",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"builtin_interfaces",type:"Time",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"node_name",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"previous_status",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"current_status",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"nav2_msgs",type:"BehaviorTreeStatusChange",stringUpperBound:null,isPrimitiveType:!1},msgName:"BehaviorTreeStatusChange"}}hasMember(e){return-1!==["timestamp","node_name","previous_status","current_status"].indexOf(e)}}class BehaviorTreeStatusChangeArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof BehaviorTreeStatusChangeWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new BehaviorTreeStatusChangeWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to BehaviorTreeStatusChangeArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to BehaviorTreeStatusChangeArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new BehaviorTreeStatusChangeRefArray(e),this._refObject=new BehaviorTreeStatusChangeRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new BehaviorTreeStatusChangeWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof BehaviorTreeStatusChangeArrayWrapper))throw new TypeError('Invalid argument: should provide "BehaviorTreeStatusChangeArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)BehaviorTreeStatusChangeWrapper.freeStruct(r[t])}static get elementType(){return BehaviorTreeStatusChangeWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return BehaviorTreeStatusChangeArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=BehaviorTreeStatusChangeWrapper;