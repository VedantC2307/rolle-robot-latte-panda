"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),DurationWrapper=require("../../generated/builtin_interfaces/builtin_interfaces__msg__Duration.js"),Wait_FeedbackRefStruct=StructType({time_left:DurationWrapper.refObjectType}),Wait_FeedbackRefArray=ArrayType(Wait_FeedbackRefStruct),Wait_FeedbackRefStructArray=StructType({data:Wait_FeedbackRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class Wait_FeedbackWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new Wait_FeedbackRefStruct(e._refObject.toObject()),this._wrapperFields.time_left=new DurationWrapper(e._wrapperFields.time_left)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new Wait_FeedbackRefStruct,this._wrapperFields.time_left=new DurationWrapper}static createFromRefObject(e){let t=new Wait_FeedbackWrapper;return t.copyRefObject(e),t}static createArray(){return new Wait_FeedbackArrayWrapper}static get ArrayType(){return Wait_FeedbackArrayWrapper}static get refObjectArrayType(){return Wait_FeedbackRefStructArray}static get refObjectType(){return Wait_FeedbackRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.time_left.freeze(e),this._refObject.time_left=this._wrapperFields.time_left.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.time_left.copyRefObject(e.time_left)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){DurationWrapper.freeStruct(e.time_left)}static destoryRawROS(e){Wait_FeedbackWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"nav2_msgs",subFolder:"action",interfaceName:"Wait_Feedback"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get time_left(){return this._wrapperFields.time_left}set time_left(e){e instanceof DurationWrapper?this._wrapperFields.time_left.copy(e):this._wrapperFields.time_left.copy(new DurationWrapper(e))}copyRefObject(e){this._refObject=new Wait_FeedbackRefStruct(e.toObject()),this._wrapperFields.time_left.copyRefObject(this._refObject.time_left)}copy(e){this._refObject=new Wait_FeedbackRefStruct(e._refObject.toObject()),this._wrapperFields.time_left.copy(e._wrapperFields.time_left)}static get classType(){return Wait_FeedbackWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"time_left",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"builtin_interfaces",type:"Duration",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"nav2_msgs",type:"Wait_Feedback",stringUpperBound:null,isPrimitiveType:!1},msgName:"Wait_Feedback"}}hasMember(e){return-1!==["time_left"].indexOf(e)}}class Wait_FeedbackArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const t=e.length;this._resize(t),e.forEach(((e,t)=>{e instanceof Wait_FeedbackWrapper?this._wrappers[t].copy(e):this._wrappers[t]=new Wait_FeedbackWrapper(e)}))}freeze(e){this._wrappers.forEach(((t,r)=>{t.freeze(e),this._refArray[r]=t.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to Wait_FeedbackArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to Wait_FeedbackArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new Wait_FeedbackRefArray(e),this._refObject=new Wait_FeedbackRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let t=0;t<e;t++)this._wrappers.push(new Wait_FeedbackWrapper)}copyRefObject(e){this._refObject=e;let t=this._refObject.data;t.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(t[e])}copy(e){if(!(e instanceof Wait_FeedbackArrayWrapper))throw new TypeError('Invalid argument: should provide "Wait_FeedbackArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,t)=>{this._wrappers[t].copy(e)}))}static freeArray(e){let t=e.data;t.length=e.size;for(let r=0;r<e.size;r++)Wait_FeedbackWrapper.freeStruct(t[r])}static get elementType(){return Wait_FeedbackWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return Wait_FeedbackArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=Wait_FeedbackWrapper;