"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),TimeWrapper=require("../../generated/builtin_interfaces/builtin_interfaces__msg__Time.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),PoseWrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Pose.js"),CostmapMetaDataRefStruct=StructType({map_load_time:TimeWrapper.refObjectType,update_time:TimeWrapper.refObjectType,layer:primitiveTypes.string,resolution:primitiveTypes.float32,size_x:primitiveTypes.uint32,size_y:primitiveTypes.uint32,origin:PoseWrapper.refObjectType}),CostmapMetaDataRefArray=ArrayType(CostmapMetaDataRefStruct),CostmapMetaDataRefStructArray=StructType({data:CostmapMetaDataRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class CostmapMetaDataWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new CostmapMetaDataRefStruct(e._refObject.toObject()),this._wrapperFields.map_load_time=new TimeWrapper(e._wrapperFields.map_load_time),this._wrapperFields.update_time=new TimeWrapper(e._wrapperFields.update_time),this._wrapperFields.layer=new StringWrapper(e._wrapperFields.layer),this._wrapperFields.origin=new PoseWrapper(e._wrapperFields.origin)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new CostmapMetaDataRefStruct,this._wrapperFields.map_load_time=new TimeWrapper,this._wrapperFields.update_time=new TimeWrapper,this._wrapperFields.layer=new StringWrapper,this._wrapperFields.origin=new PoseWrapper}static createFromRefObject(e){let r=new CostmapMetaDataWrapper;return r.copyRefObject(e),r}static createArray(){return new CostmapMetaDataArrayWrapper}static get ArrayType(){return CostmapMetaDataArrayWrapper}static get refObjectArrayType(){return CostmapMetaDataRefStructArray}static get refObjectType(){return CostmapMetaDataRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.map_load_time.freeze(e),this._refObject.map_load_time=this._wrapperFields.map_load_time.refObject,this._wrapperFields.update_time.freeze(e),this._refObject.update_time=this._wrapperFields.update_time.refObject,e&&this._wrapperFields.layer.freeze(e),this._refObject.layer=this._wrapperFields.layer.refObject,this._wrapperFields.origin.freeze(e),this._refObject.origin=this._wrapperFields.origin.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.map_load_time.copyRefObject(e.map_load_time),this._wrapperFields.update_time.copyRefObject(e.update_time),this._wrapperFields.layer.data=e.layer.data,this._refObject.resolution=e.resolution,this._refObject.size_x=e.size_x,this._refObject.size_y=e.size_y,this._wrapperFields.origin.copyRefObject(e.origin)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){TimeWrapper.freeStruct(e.map_load_time),TimeWrapper.freeStruct(e.update_time),StringWrapper.freeStruct(e.layer),PoseWrapper.freeStruct(e.origin)}static destoryRawROS(e){CostmapMetaDataWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"nav2_msgs",subFolder:"msg",interfaceName:"CostmapMetaData"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get map_load_time(){return this._wrapperFields.map_load_time}set map_load_time(e){e instanceof TimeWrapper?this._wrapperFields.map_load_time.copy(e):this._wrapperFields.map_load_time.copy(new TimeWrapper(e))}get update_time(){return this._wrapperFields.update_time}set update_time(e){e instanceof TimeWrapper?this._wrapperFields.update_time.copy(e):this._wrapperFields.update_time.copy(new TimeWrapper(e))}get layer(){return this._wrapperFields.layer.data}set layer(e){this._wrapperFields.layer.data=e}get resolution(){return this._refObject.resolution}set resolution(e){this._refObject.resolution=e}get size_x(){return this._refObject.size_x}set size_x(e){this._refObject.size_x=e}get size_y(){return this._refObject.size_y}set size_y(e){this._refObject.size_y=e}get origin(){return this._wrapperFields.origin}set origin(e){e instanceof PoseWrapper?this._wrapperFields.origin.copy(e):this._wrapperFields.origin.copy(new PoseWrapper(e))}copyRefObject(e){this._refObject=new CostmapMetaDataRefStruct(e.toObject()),this._wrapperFields.map_load_time.copyRefObject(this._refObject.map_load_time),this._wrapperFields.update_time.copyRefObject(this._refObject.update_time),this._wrapperFields.layer.copyRefObject(this._refObject.layer),this._wrapperFields.origin.copyRefObject(this._refObject.origin)}copy(e){this._refObject=new CostmapMetaDataRefStruct(e._refObject.toObject()),this._wrapperFields.map_load_time.copy(e._wrapperFields.map_load_time),this._wrapperFields.update_time.copy(e._wrapperFields.update_time),this._wrapperFields.layer.copy(e._wrapperFields.layer),this._wrapperFields.origin.copy(e._wrapperFields.origin)}static get classType(){return CostmapMetaDataWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"map_load_time",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"builtin_interfaces",type:"Time",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"update_time",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"builtin_interfaces",type:"Time",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"layer",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"resolution",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"size_x",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"uint32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"size_y",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"uint32",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"origin",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"geometry_msgs",type:"Pose",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"nav2_msgs",type:"CostmapMetaData",stringUpperBound:null,isPrimitiveType:!1},msgName:"CostmapMetaData"}}hasMember(e){return-1!==["map_load_time","update_time","layer","resolution","size_x","size_y","origin"].indexOf(e)}}class CostmapMetaDataArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof CostmapMetaDataWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new CostmapMetaDataWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to CostmapMetaDataArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to CostmapMetaDataArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new CostmapMetaDataRefArray(e),this._refObject=new CostmapMetaDataRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new CostmapMetaDataWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof CostmapMetaDataArrayWrapper))throw new TypeError('Invalid argument: should provide "CostmapMetaDataArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)CostmapMetaDataWrapper.freeStruct(r[t])}static get elementType(){return CostmapMetaDataWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return CostmapMetaDataArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=CostmapMetaDataWrapper;