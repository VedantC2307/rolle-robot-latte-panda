"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),TimeWrapper=require("../../generated/builtin_interfaces/builtin_interfaces__msg__Time.js"),BehaviorTreeStatusChangeWrapper=require("../../generated/nav2_msgs/nav2_msgs__msg__BehaviorTreeStatusChange.js"),BehaviorTreeLogRefStruct=StructType({timestamp:TimeWrapper.refObjectType,event_log:BehaviorTreeStatusChangeWrapper.refObjectArrayType}),BehaviorTreeLogRefArray=ArrayType(BehaviorTreeLogRefStruct),BehaviorTreeLogRefStructArray=StructType({data:BehaviorTreeLogRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class BehaviorTreeLogWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new BehaviorTreeLogRefStruct(e._refObject.toObject()),this._wrapperFields.timestamp=new TimeWrapper(e._wrapperFields.timestamp),this._wrapperFields.event_log=BehaviorTreeStatusChangeWrapper.createArray(),this._wrapperFields.event_log.copy(e._wrapperFields.event_log)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new BehaviorTreeLogRefStruct,this._wrapperFields.timestamp=new TimeWrapper,this._wrapperFields.event_log=BehaviorTreeStatusChangeWrapper.createArray()}static createFromRefObject(e){let r=new BehaviorTreeLogWrapper;return r.copyRefObject(e),r}static createArray(){return new BehaviorTreeLogArrayWrapper}static get ArrayType(){return BehaviorTreeLogArrayWrapper}static get refObjectArrayType(){return BehaviorTreeLogRefStructArray}static get refObjectType(){return BehaviorTreeLogRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.timestamp.freeze(e),this._refObject.timestamp=this._wrapperFields.timestamp.refObject,e&&this._wrapperFields.event_log.fill([]),this._wrapperFields.event_log.freeze(e),this._refObject.event_log=this._wrapperFields.event_log.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.timestamp.copyRefObject(e.timestamp),this._wrapperFields.event_log.copyRefObject(e.event_log)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){TimeWrapper.freeStruct(e.timestamp),0!=e.event_log.size&&(BehaviorTreeStatusChangeWrapper.ArrayType.freeArray(e.event_log),BehaviorTreeStatusChangeWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.event_log,BehaviorTreeStatusChangeWrapper.refObjectArrayType,"data"))}static destoryRawROS(e){BehaviorTreeLogWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"nav2_msgs",subFolder:"msg",interfaceName:"BehaviorTreeLog"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get timestamp(){return this._wrapperFields.timestamp}set timestamp(e){e instanceof TimeWrapper?this._wrapperFields.timestamp.copy(e):this._wrapperFields.timestamp.copy(new TimeWrapper(e))}get event_log(){return this._wrapperFields.event_log}set event_log(e){this._wrapperFields.event_log.fill(e)}copyRefObject(e){this._refObject=new BehaviorTreeLogRefStruct(e.toObject()),this._wrapperFields.timestamp.copyRefObject(this._refObject.timestamp),this._wrapperFields.event_log.copyRefObject(this._refObject.event_log)}copy(e){this._refObject=new BehaviorTreeLogRefStruct(e._refObject.toObject()),this._wrapperFields.timestamp.copy(e._wrapperFields.timestamp),this._wrapperFields.event_log.copy(e._wrapperFields.event_log)}static get classType(){return BehaviorTreeLogWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"timestamp",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"builtin_interfaces",type:"Time",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"event_log",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"nav2_msgs",type:"BehaviorTreeStatusChange",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"nav2_msgs",type:"BehaviorTreeLog",stringUpperBound:null,isPrimitiveType:!1},msgName:"BehaviorTreeLog"}}hasMember(e){return-1!==["timestamp","event_log"].indexOf(e)}}class BehaviorTreeLogArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof BehaviorTreeLogWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new BehaviorTreeLogWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to BehaviorTreeLogArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to BehaviorTreeLogArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new BehaviorTreeLogRefArray(e),this._refObject=new BehaviorTreeLogRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new BehaviorTreeLogWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof BehaviorTreeLogArrayWrapper))throw new TypeError('Invalid argument: should provide "BehaviorTreeLogArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)BehaviorTreeLogWrapper.freeStruct(r[t])}static get elementType(){return BehaviorTreeLogWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return BehaviorTreeLogArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=BehaviorTreeLogWrapper;