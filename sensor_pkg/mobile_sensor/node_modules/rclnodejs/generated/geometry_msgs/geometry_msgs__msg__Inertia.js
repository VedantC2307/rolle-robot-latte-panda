"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),Vector3Wrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Vector3.js"),InertiaRefStruct=StructType({m:primitiveTypes.float64,com:Vector3Wrapper.refObjectType,ixx:primitiveTypes.float64,ixy:primitiveTypes.float64,ixz:primitiveTypes.float64,iyy:primitiveTypes.float64,iyz:primitiveTypes.float64,izz:primitiveTypes.float64}),InertiaRefArray=ArrayType(InertiaRefStruct),InertiaRefStructArray=StructType({data:InertiaRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class InertiaWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new InertiaRefStruct(e._refObject.toObject()),this._wrapperFields.com=new Vector3Wrapper(e._wrapperFields.com)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new InertiaRefStruct,this._wrapperFields.com=new Vector3Wrapper}static createFromRefObject(e){let r=new InertiaWrapper;return r.copyRefObject(e),r}static createArray(){return new InertiaArrayWrapper}static get ArrayType(){return InertiaArrayWrapper}static get refObjectArrayType(){return InertiaRefStructArray}static get refObjectType(){return InertiaRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.com.freeze(e),this._refObject.com=this._wrapperFields.com.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._refObject.m=e.m,this._wrapperFields.com.copyRefObject(e.com),this._refObject.ixx=e.ixx,this._refObject.ixy=e.ixy,this._refObject.ixz=e.ixz,this._refObject.iyy=e.iyy,this._refObject.iyz=e.iyz,this._refObject.izz=e.izz}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){Vector3Wrapper.freeStruct(e.com)}static destoryRawROS(e){InertiaWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"geometry_msgs",subFolder:"msg",interfaceName:"Inertia"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get m(){return this._refObject.m}set m(e){this._refObject.m=e}get com(){return this._wrapperFields.com}set com(e){e instanceof Vector3Wrapper?this._wrapperFields.com.copy(e):this._wrapperFields.com.copy(new Vector3Wrapper(e))}get ixx(){return this._refObject.ixx}set ixx(e){this._refObject.ixx=e}get ixy(){return this._refObject.ixy}set ixy(e){this._refObject.ixy=e}get ixz(){return this._refObject.ixz}set ixz(e){this._refObject.ixz=e}get iyy(){return this._refObject.iyy}set iyy(e){this._refObject.iyy=e}get iyz(){return this._refObject.iyz}set iyz(e){this._refObject.iyz=e}get izz(){return this._refObject.izz}set izz(e){this._refObject.izz=e}copyRefObject(e){this._refObject=new InertiaRefStruct(e.toObject()),this._wrapperFields.com.copyRefObject(this._refObject.com)}copy(e){this._refObject=new InertiaRefStruct(e._refObject.toObject()),this._wrapperFields.com.copy(e._wrapperFields.com)}static get classType(){return InertiaWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"m",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"com",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"geometry_msgs",type:"Vector3",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"ixx",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"ixy",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"ixz",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"iyy",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"iyz",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"izz",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:null,type:"float64",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"geometry_msgs",type:"Inertia",stringUpperBound:null,isPrimitiveType:!1},msgName:"Inertia"}}hasMember(e){return-1!==["m","com","ixx","ixy","ixz","iyy","iyz","izz"].indexOf(e)}}class InertiaArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof InertiaWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new InertiaWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to InertiaArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to InertiaArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new InertiaRefArray(e),this._refObject=new InertiaRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new InertiaWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof InertiaArrayWrapper))throw new TypeError('Invalid argument: should provide "InertiaArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)InertiaWrapper.freeStruct(r[t])}static get elementType(){return InertiaWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return InertiaArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=InertiaWrapper;