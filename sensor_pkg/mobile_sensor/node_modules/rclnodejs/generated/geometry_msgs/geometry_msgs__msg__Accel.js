"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),Vector3Wrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Vector3.js"),AccelRefStruct=StructType({linear:Vector3Wrapper.refObjectType,angular:Vector3Wrapper.refObjectType}),AccelRefArray=ArrayType(AccelRefStruct),AccelRefStructArray=StructType({data:AccelRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class AccelWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new AccelRefStruct(e._refObject.toObject()),this._wrapperFields.linear=new Vector3Wrapper(e._wrapperFields.linear),this._wrapperFields.angular=new Vector3Wrapper(e._wrapperFields.angular)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new AccelRefStruct,this._wrapperFields.linear=new Vector3Wrapper,this._wrapperFields.angular=new Vector3Wrapper}static createFromRefObject(e){let r=new AccelWrapper;return r.copyRefObject(e),r}static createArray(){return new AccelArrayWrapper}static get ArrayType(){return AccelArrayWrapper}static get refObjectArrayType(){return AccelRefStructArray}static get refObjectType(){return AccelRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.linear.freeze(e),this._refObject.linear=this._wrapperFields.linear.refObject,this._wrapperFields.angular.freeze(e),this._refObject.angular=this._wrapperFields.angular.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.linear.copyRefObject(e.linear),this._wrapperFields.angular.copyRefObject(e.angular)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){Vector3Wrapper.freeStruct(e.linear),Vector3Wrapper.freeStruct(e.angular)}static destoryRawROS(e){AccelWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"geometry_msgs",subFolder:"msg",interfaceName:"Accel"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get linear(){return this._wrapperFields.linear}set linear(e){e instanceof Vector3Wrapper?this._wrapperFields.linear.copy(e):this._wrapperFields.linear.copy(new Vector3Wrapper(e))}get angular(){return this._wrapperFields.angular}set angular(e){e instanceof Vector3Wrapper?this._wrapperFields.angular.copy(e):this._wrapperFields.angular.copy(new Vector3Wrapper(e))}copyRefObject(e){this._refObject=new AccelRefStruct(e.toObject()),this._wrapperFields.linear.copyRefObject(this._refObject.linear),this._wrapperFields.angular.copyRefObject(this._refObject.angular)}copy(e){this._refObject=new AccelRefStruct(e._refObject.toObject()),this._wrapperFields.linear.copy(e._wrapperFields.linear),this._wrapperFields.angular.copy(e._wrapperFields.angular)}static get classType(){return AccelWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"linear",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"geometry_msgs",type:"Vector3",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"angular",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"geometry_msgs",type:"Vector3",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"geometry_msgs",type:"Accel",stringUpperBound:null,isPrimitiveType:!1},msgName:"Accel"}}hasMember(e){return-1!==["linear","angular"].indexOf(e)}}class AccelArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof AccelWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new AccelWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to AccelArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to AccelArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new AccelRefArray(e),this._refObject=new AccelRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new AccelWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof AccelArrayWrapper))throw new TypeError('Invalid argument: should provide "AccelArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)AccelWrapper.freeStruct(r[t])}static get elementType(){return AccelWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return AccelArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=AccelWrapper;