"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),PoseWrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Pose.js"),TwistWrapper=require("../../generated/geometry_msgs/geometry_msgs__msg__Twist.js"),LinkStatesRefStruct=StructType({name:StringWrapper.refObjectArrayType,pose:PoseWrapper.refObjectArrayType,twist:TwistWrapper.refObjectArrayType}),LinkStatesRefArray=ArrayType(LinkStatesRefStruct),LinkStatesRefStructArray=StructType({data:LinkStatesRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class LinkStatesWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new LinkStatesRefStruct(e._refObject.toObject()),this._wrapperFields.name=StringWrapper.createArray(),this._wrapperFields.name.copy(e._wrapperFields.name),this.name=e.name,this._wrapperFields.pose=PoseWrapper.createArray(),this._wrapperFields.pose.copy(e._wrapperFields.pose),this._wrapperFields.twist=TwistWrapper.createArray(),this._wrapperFields.twist.copy(e._wrapperFields.twist)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new LinkStatesRefStruct,this._wrapperFields.name=StringWrapper.createArray(),this._nameArray=[],this._wrapperFields.pose=PoseWrapper.createArray(),this._wrapperFields.twist=TwistWrapper.createArray()}static createFromRefObject(e){let r=new LinkStatesWrapper;return r.copyRefObject(e),r}static createArray(){return new LinkStatesArrayWrapper}static get ArrayType(){return LinkStatesArrayWrapper}static get refObjectArrayType(){return LinkStatesRefStructArray}static get refObjectType(){return LinkStatesRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e?this._wrapperFields.name.fill([]):this._wrapperFields.name.fill(this._nameArray),this._wrapperFields.name.freeze(e),this._refObject.name=this._wrapperFields.name.refObject,e&&this._wrapperFields.pose.fill([]),this._wrapperFields.pose.freeze(e),this._refObject.pose=this._wrapperFields.pose.refObject,e&&this._wrapperFields.twist.fill([]),this._wrapperFields.twist.freeze(e),this._refObject.twist=this._wrapperFields.twist.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){e.name.data.length=e.name.size;for(let r=0;r<e.name.size;r++)this._nameArray[r]=e.name.data[r].data;this._wrapperFields.pose.copyRefObject(e.pose),this._wrapperFields.twist.copyRefObject(e.twist)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){0!=e.name.size&&(StringWrapper.ArrayType.freeArray(e.name),StringWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.name,StringWrapper.refObjectArrayType,"data")),0!=e.pose.size&&(PoseWrapper.ArrayType.freeArray(e.pose),PoseWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.pose,PoseWrapper.refObjectArrayType,"data")),0!=e.twist.size&&(TwistWrapper.ArrayType.freeArray(e.twist),TwistWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.twist,TwistWrapper.refObjectArrayType,"data"))}static destoryRawROS(e){LinkStatesWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"gazebo_msgs",subFolder:"msg",interfaceName:"LinkStates"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get name(){return this._nameArray}set name(e){this._nameArray=e}get pose(){return this._wrapperFields.pose}set pose(e){this._wrapperFields.pose.fill(e)}get twist(){return this._wrapperFields.twist}set twist(e){this._wrapperFields.twist.fill(e)}copyRefObject(e){this._refObject=new LinkStatesRefStruct(e.toObject()),e.name.data.length=e.name.size;for(let r=0;r<e.name.size;r++)this._nameArray[r]=e.name.data[r].data;this._wrapperFields.pose.copyRefObject(this._refObject.pose),this._wrapperFields.twist.copyRefObject(this._refObject.twist)}copy(e){this._refObject=new LinkStatesRefStruct(e._refObject.toObject()),this._nameArray=e._nameArray.slice(),this._wrapperFields.pose.copy(e._wrapperFields.pose),this._wrapperFields.twist.copy(e._wrapperFields.twist)}static get classType(){return LinkStatesWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"name",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"pose",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"geometry_msgs",type:"Pose",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"twist",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"geometry_msgs",type:"Twist",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"gazebo_msgs",type:"LinkStates",stringUpperBound:null,isPrimitiveType:!1},msgName:"LinkStates"}}hasMember(e){return-1!==["name","pose","twist"].indexOf(e)}}class LinkStatesArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof LinkStatesWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new LinkStatesWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to LinkStatesArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to LinkStatesArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new LinkStatesRefArray(e),this._refObject=new LinkStatesRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new LinkStatesWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof LinkStatesArrayWrapper))throw new TypeError('Invalid argument: should provide "LinkStatesArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)LinkStatesWrapper.freeStruct(r[t])}static get elementType(){return LinkStatesWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return LinkStatesArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=LinkStatesWrapper;