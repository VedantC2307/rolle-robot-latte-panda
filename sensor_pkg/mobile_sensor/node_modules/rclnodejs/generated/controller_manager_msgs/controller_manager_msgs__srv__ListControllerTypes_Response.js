"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),StringWrapper=require("../../generated/std_msgs/std_msgs__msg__String.js"),ListControllerTypes_ResponseRefStruct=StructType({types:StringWrapper.refObjectArrayType,base_classes:StringWrapper.refObjectArrayType}),ListControllerTypes_ResponseRefArray=ArrayType(ListControllerTypes_ResponseRefStruct),ListControllerTypes_ResponseRefStructArray=StructType({data:ListControllerTypes_ResponseRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class ListControllerTypes_ResponseWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new ListControllerTypes_ResponseRefStruct(e._refObject.toObject()),this._wrapperFields.types=StringWrapper.createArray(),this._wrapperFields.types.copy(e._wrapperFields.types),this.types=e.types,this._wrapperFields.base_classes=StringWrapper.createArray(),this._wrapperFields.base_classes.copy(e._wrapperFields.base_classes),this.base_classes=e.base_classes):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new ListControllerTypes_ResponseRefStruct,this._wrapperFields.types=StringWrapper.createArray(),this._typesArray=[],this._wrapperFields.base_classes=StringWrapper.createArray(),this._base_classesArray=[]}static createFromRefObject(e){let r=new ListControllerTypes_ResponseWrapper;return r.copyRefObject(e),r}static createArray(){return new ListControllerTypes_ResponseArrayWrapper}static get ArrayType(){return ListControllerTypes_ResponseArrayWrapper}static get refObjectArrayType(){return ListControllerTypes_ResponseRefStructArray}static get refObjectType(){return ListControllerTypes_ResponseRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){e?this._wrapperFields.types.fill([]):this._wrapperFields.types.fill(this._typesArray),this._wrapperFields.types.freeze(e),this._refObject.types=this._wrapperFields.types.refObject,e?this._wrapperFields.base_classes.fill([]):this._wrapperFields.base_classes.fill(this._base_classesArray),this._wrapperFields.base_classes.freeze(e),this._refObject.base_classes=this._wrapperFields.base_classes.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){e.types.data.length=e.types.size;for(let r=0;r<e.types.size;r++)this._typesArray[r]=e.types.data[r].data;e.base_classes.data.length=e.base_classes.size;for(let r=0;r<e.base_classes.size;r++)this._base_classesArray[r]=e.base_classes.data[r].data}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){0!=e.types.size&&(StringWrapper.ArrayType.freeArray(e.types),StringWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.types,StringWrapper.refObjectArrayType,"data")),0!=e.base_classes.size&&(StringWrapper.ArrayType.freeArray(e.base_classes),StringWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.base_classes,StringWrapper.refObjectArrayType,"data"))}static destoryRawROS(e){ListControllerTypes_ResponseWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"controller_manager_msgs",subFolder:"srv",interfaceName:"ListControllerTypes_Response"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get types(){return this._typesArray}set types(e){this._typesArray=e}get base_classes(){return this._base_classesArray}set base_classes(e){this._base_classesArray=e}copyRefObject(e){this._refObject=new ListControllerTypes_ResponseRefStruct(e.toObject()),e.types.data.length=e.types.size;for(let r=0;r<e.types.size;r++)this._typesArray[r]=e.types.data[r].data;e.base_classes.data.length=e.base_classes.size;for(let r=0;r<e.base_classes.size;r++)this._base_classesArray[r]=e.base_classes.data[r].data}copy(e){this._refObject=new ListControllerTypes_ResponseRefStruct(e._refObject.toObject()),this._typesArray=e._typesArray.slice(),this._base_classesArray=e._base_classesArray.slice()}static get classType(){return ListControllerTypes_ResponseWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"types",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null},{name:"base_classes",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:null,type:"string",stringUpperBound:null,isPrimitiveType:!0},default_value:null}],baseType:{pkgName:"controller_manager_msgs",type:"ListControllerTypes_Response",stringUpperBound:null,isPrimitiveType:!1},msgName:"ListControllerTypes_Response"}}hasMember(e){return-1!==["types","base_classes"].indexOf(e)}}class ListControllerTypes_ResponseArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof ListControllerTypes_ResponseWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new ListControllerTypes_ResponseWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,s)=>{r.freeze(e),this._refArray[s]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to ListControllerTypes_ResponseArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to ListControllerTypes_ResponseArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new ListControllerTypes_ResponseRefArray(e),this._refObject=new ListControllerTypes_ResponseRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new ListControllerTypes_ResponseWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof ListControllerTypes_ResponseArrayWrapper))throw new TypeError('Invalid argument: should provide "ListControllerTypes_ResponseArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let s=0;s<e.size;s++)ListControllerTypes_ResponseWrapper.freeStruct(r[s])}static get elementType(){return ListControllerTypes_ResponseWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return ListControllerTypes_ResponseArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=ListControllerTypes_ResponseWrapper;