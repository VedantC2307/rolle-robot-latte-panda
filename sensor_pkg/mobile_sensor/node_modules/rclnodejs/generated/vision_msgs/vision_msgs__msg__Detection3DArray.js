"use strict";const ref=require("@rclnodejs/ref-napi"),StructType=require("@rclnodejs/ref-struct-di")(ref),ArrayType=require("@rclnodejs/ref-array-di")(ref),primitiveTypes=require("../../rosidl_gen/primitive_types.js"),deallocator=require("../../rosidl_gen/deallocator.js"),translator=require("../../rosidl_gen/message_translator.js"),HeaderWrapper=require("../../generated/std_msgs/std_msgs__msg__Header.js"),Detection3DWrapper=require("../../generated/vision_msgs/vision_msgs__msg__Detection3D.js"),Detection3DArrayRefStruct=StructType({header:HeaderWrapper.refObjectType,detections:Detection3DWrapper.refObjectArrayType}),Detection3DArrayRefArray=ArrayType(Detection3DArrayRefStruct),Detection3DArrayRefStructArray=StructType({data:Detection3DArrayRefArray,size:ref.types.size_t,capacity:ref.types.size_t});class Detection3DArrayWrapper{constructor(e){this._initialize(),this._setDefaults(),"object"==typeof e&&e._refObject?(this._refObject=new Detection3DArrayRefStruct(e._refObject.toObject()),this._wrapperFields.header=new HeaderWrapper(e._wrapperFields.header),this._wrapperFields.detections=Detection3DWrapper.createArray(),this._wrapperFields.detections.copy(e._wrapperFields.detections)):void 0!==e&&translator.constructFromPlanObject(this,e),this.freeze(!1)}_setDefaults(){}_initialize(){this._wrapperFields={},this._refObject=new Detection3DArrayRefStruct,this._wrapperFields.header=new HeaderWrapper,this._wrapperFields.detections=Detection3DWrapper.createArray()}static createFromRefObject(e){let r=new Detection3DArrayWrapper;return r.copyRefObject(e),r}static createArray(){return new Detection3DArrayArrayWrapper}static get ArrayType(){return Detection3DArrayArrayWrapper}static get refObjectArrayType(){return Detection3DArrayRefStructArray}static get refObjectType(){return Detection3DArrayRefStruct}toRawROS(){return this.freeze(!0),this._refObject.ref()}freeze(e){this._wrapperFields.header.freeze(e),this._refObject.header=this._wrapperFields.header.refObject,e&&this._wrapperFields.detections.fill([]),this._wrapperFields.detections.freeze(e),this._refObject.detections=this._wrapperFields.detections.refObject}serialize(){return this.freeze(!1),this._refObject.ref()}deserialize(e){this._wrapperFields.header.copyRefObject(e.header),this._wrapperFields.detections.copyRefObject(e.detections)}toPlainObject(e){return translator.toPlainObject(this,e)}static freeStruct(e){HeaderWrapper.freeStruct(e.header),0!=e.detections.size&&(Detection3DWrapper.ArrayType.freeArray(e.detections),Detection3DWrapper.ArrayType.useTypedArray||deallocator.freeStructMember(e.detections,Detection3DWrapper.refObjectArrayType,"data"))}static destoryRawROS(e){Detection3DArrayWrapper.freeStruct(e.refObject)}static type(){return{pkgName:"vision_msgs",subFolder:"msg",interfaceName:"Detection3DArray"}}static isPrimitive(){return!1}static get isROSArray(){return!1}get refObject(){return this._refObject}get header(){return this._wrapperFields.header}set header(e){e instanceof HeaderWrapper?this._wrapperFields.header.copy(e):this._wrapperFields.header.copy(new HeaderWrapper(e))}get detections(){return this._wrapperFields.detections}set detections(e){this._wrapperFields.detections.fill(e)}copyRefObject(e){this._refObject=new Detection3DArrayRefStruct(e.toObject()),this._wrapperFields.header.copyRefObject(this._refObject.header),this._wrapperFields.detections.copyRefObject(this._refObject.detections)}copy(e){this._refObject=new Detection3DArrayRefStruct(e._refObject.toObject()),this._wrapperFields.header.copy(e._wrapperFields.header),this._wrapperFields.detections.copy(e._wrapperFields.detections)}static get classType(){return Detection3DArrayWrapper}static get ROSMessageDef(){return{constants:[],fields:[{name:"header",type:{isArray:!1,arraySize:null,isUpperBound:!1,isDynamicArray:!1,isFixedSizeArray:!1,pkgName:"std_msgs",type:"Header",stringUpperBound:null,isPrimitiveType:!1},default_value:null},{name:"detections",type:{isArray:!0,arraySize:null,isUpperBound:!1,isDynamicArray:!0,isFixedSizeArray:null,pkgName:"vision_msgs",type:"Detection3D",stringUpperBound:null,isPrimitiveType:!1},default_value:null}],baseType:{pkgName:"vision_msgs",type:"Detection3DArray",stringUpperBound:null,isPrimitiveType:!1},msgName:"Detection3DArray"}}hasMember(e){return-1!==["header","detections"].indexOf(e)}}class Detection3DArrayArrayWrapper{constructor(e=0){this._resize(e)}toRawROS(){return this._refObject.ref()}fill(e){const r=e.length;this._resize(r),e.forEach(((e,r)=>{e instanceof Detection3DArrayWrapper?this._wrappers[r].copy(e):this._wrappers[r]=new Detection3DArrayWrapper(e)}))}freeze(e){this._wrappers.forEach(((r,t)=>{r.freeze(e),this._refArray[t]=r.refObject})),this._refObject.size=this._wrappers.length,this._refObject.capacity=this._wrappers.length,0===this._refObject.capacity?this._refObject.data=null:this._refObject.data=this._refArray.buffer}get refObject(){return this._refObject}get data(){return this._wrappers}get size(){return this._wrappers.length}set size(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to Detection3DArrayArrayWrapper.size setter");return this._resize(e)}get capacity(){return this._wrappers.length}set capacity(e){if("number"!=typeof e)throw new TypeError("Invalid argument: should provide a number to Detection3DArrayArrayWrapper.capacity setter");return this._resize(e)}get refObject(){return this._refObject}_resize(e){if(e<0)throw new RangeError("Invalid argument: should provide a positive number");this._refArray=new Detection3DArrayRefArray(e),this._refObject=new Detection3DArrayRefStructArray,this._refObject.size=e,this._refObject.capacity=e,this._wrappers=new Array;for(let r=0;r<e;r++)this._wrappers.push(new Detection3DArrayWrapper)}copyRefObject(e){this._refObject=e;let r=this._refObject.data;r.length=this._refObject.size,this._resize(this._refObject.size);for(let e=0;e<this._refObject.size;e++)this._wrappers[e].copyRefObject(r[e])}copy(e){if(!(e instanceof Detection3DArrayArrayWrapper))throw new TypeError('Invalid argument: should provide "Detection3DArrayArrayWrapper".');this._resize(e.size),e._wrappers.forEach(((e,r)=>{this._wrappers[r].copy(e)}))}static freeArray(e){let r=e.data;r.length=e.size;for(let t=0;t<e.size;t++)Detection3DArrayWrapper.freeStruct(r[t])}static get elementType(){return Detection3DArrayWrapper}static get isROSArray(){return!0}static get useTypedArray(){return!1}get classType(){return Detection3DArrayArrayWrapper}toPlainObject(e){return translator.toPlainObject(this,e)}}module.exports=Detection3DArrayWrapper;